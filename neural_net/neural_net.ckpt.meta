meta_info_def {
  stripped_op_list {
    op {
      name: "Add"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_STRING
          }
        }
      }
    }
    op {
      name: "ApplyAdam"
      input_arg {
        name: "var"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "m"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "v"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "beta1_power"
        type_attr: "T"
      }
      input_arg {
        name: "beta2_power"
        type_attr: "T"
      }
      input_arg {
        name: "lr"
        type_attr: "T"
      }
      input_arg {
        name: "beta1"
        type_attr: "T"
      }
      input_arg {
        name: "beta2"
        type_attr: "T"
      }
      input_arg {
        name: "epsilon"
        type_attr: "T"
      }
      input_arg {
        name: "grad"
        type_attr: "T"
      }
      output_arg {
        name: "out"
        type_attr: "T"
        is_ref: true
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "use_locking"
        type: "bool"
        default_value {
          b: false
        }
      }
    }
    op {
      name: "ArgMax"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "dimension"
        type_attr: "Tidx"
      }
      output_arg {
        name: "output"
        type: DT_INT64
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "Tidx"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "Assign"
      input_arg {
        name: "ref"
        type_attr: "T"
        is_ref: true
      }
      input_arg {
        name: "value"
        type_attr: "T"
      }
      output_arg {
        name: "output_ref"
        type_attr: "T"
        is_ref: true
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "validate_shape"
        type: "bool"
        default_value {
          b: true
        }
      }
      attr {
        name: "use_locking"
        type: "bool"
        default_value {
          b: true
        }
      }
      allows_uninitialized_input: true
    }
    op {
      name: "BroadcastGradientArgs"
      input_arg {
        name: "s0"
        type_attr: "T"
      }
      input_arg {
        name: "s1"
        type_attr: "T"
      }
      output_arg {
        name: "r0"
        type_attr: "T"
      }
      output_arg {
        name: "r1"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "Cast"
      input_arg {
        name: "x"
        type_attr: "SrcT"
      }
      output_arg {
        name: "y"
        type_attr: "DstT"
      }
      attr {
        name: "SrcT"
        type: "type"
      }
      attr {
        name: "DstT"
        type: "type"
      }
    }
    op {
      name: "Concat"
      input_arg {
        name: "concat_dim"
        type: DT_INT32
      }
      input_arg {
        name: "values"
        type_attr: "T"
        number_attr: "N"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "N"
        type: "int"
        has_minimum: true
        minimum: 2
      }
      attr {
        name: "T"
        type: "type"
      }
    }
    op {
      name: "Const"
      output_arg {
        name: "output"
        type_attr: "dtype"
      }
      attr {
        name: "value"
        type: "tensor"
      }
      attr {
        name: "dtype"
        type: "type"
      }
    }
    op {
      name: "Conv2D"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "filter"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
      attr {
        name: "strides"
        type: "list(int)"
      }
      attr {
        name: "use_cudnn_on_gpu"
        type: "bool"
        default_value {
          b: true
        }
      }
      attr {
        name: "padding"
        type: "string"
        allowed_values {
          list {
            s: "SAME"
            s: "VALID"
          }
        }
      }
      attr {
        name: "data_format"
        type: "string"
        default_value {
          s: "NHWC"
        }
        allowed_values {
          list {
            s: "NHWC"
            s: "NCHW"
          }
        }
      }
    }
    op {
      name: "Conv2DBackpropFilter"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "filter_sizes"
        type: DT_INT32
      }
      input_arg {
        name: "out_backprop"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
      attr {
        name: "strides"
        type: "list(int)"
      }
      attr {
        name: "use_cudnn_on_gpu"
        type: "bool"
        default_value {
          b: true
        }
      }
      attr {
        name: "padding"
        type: "string"
        allowed_values {
          list {
            s: "SAME"
            s: "VALID"
          }
        }
      }
      attr {
        name: "data_format"
        type: "string"
        default_value {
          s: "NHWC"
        }
        allowed_values {
          list {
            s: "NHWC"
            s: "NCHW"
          }
        }
      }
    }
    op {
      name: "Conv2DBackpropInput"
      input_arg {
        name: "input_sizes"
        type: DT_INT32
      }
      input_arg {
        name: "filter"
        type_attr: "T"
      }
      input_arg {
        name: "out_backprop"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
      attr {
        name: "strides"
        type: "list(int)"
      }
      attr {
        name: "use_cudnn_on_gpu"
        type: "bool"
        default_value {
          b: true
        }
      }
      attr {
        name: "padding"
        type: "string"
        allowed_values {
          list {
            s: "SAME"
            s: "VALID"
          }
        }
      }
      attr {
        name: "data_format"
        type: "string"
        default_value {
          s: "NHWC"
        }
        allowed_values {
          list {
            s: "NHWC"
            s: "NCHW"
          }
        }
      }
    }
    op {
      name: "Div"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "Equal"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type: DT_BOOL
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_QUINT8
            type: DT_QINT8
            type: DT_QINT32
            type: DT_STRING
            type: DT_BOOL
            type: DT_COMPLEX128
          }
        }
      }
      is_commutative: true
    }
    op {
      name: "ExpandDims"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "dim"
        type_attr: "Tdim"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "Tdim"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "Fill"
      input_arg {
        name: "dims"
        type: DT_INT32
      }
      input_arg {
        name: "value"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
    }
    op {
      name: "Floor"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
    }
    op {
      name: "HistogramSummary"
      input_arg {
        name: "tag"
        type: DT_STRING
      }
      input_arg {
        name: "values"
        type_attr: "T"
      }
      output_arg {
        name: "summary"
        type: DT_STRING
      }
      attr {
        name: "T"
        type: "type"
        default_value {
          type: DT_FLOAT
        }
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_UINT8
            type: DT_INT16
            type: DT_INT8
            type: DT_UINT16
            type: DT_HALF
          }
        }
      }
    }
    op {
      name: "Identity"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
    }
    op {
      name: "ImageSummary"
      input_arg {
        name: "tag"
        type: DT_STRING
      }
      input_arg {
        name: "tensor"
        type_attr: "T"
      }
      output_arg {
        name: "summary"
        type: DT_STRING
      }
      attr {
        name: "max_images"
        type: "int"
        default_value {
          i: 3
        }
        has_minimum: true
        minimum: 1
      }
      attr {
        name: "T"
        type: "type"
        default_value {
          type: DT_FLOAT
        }
        allowed_values {
          list {
            type: DT_UINT8
            type: DT_FLOAT
            type: DT_HALF
          }
        }
      }
      attr {
        name: "bad_color"
        type: "tensor"
        default_value {
          tensor {
            dtype: DT_UINT8
            tensor_shape {
              dim {
                size: 4
              }
            }
            int_val: 255
            int_val: 0
            int_val: 0
            int_val: 255
          }
        }
      }
    }
    op {
      name: "MatMul"
      input_arg {
        name: "a"
        type_attr: "T"
      }
      input_arg {
        name: "b"
        type_attr: "T"
      }
      output_arg {
        name: "product"
        type_attr: "T"
      }
      attr {
        name: "transpose_a"
        type: "bool"
        default_value {
          b: false
        }
      }
      attr {
        name: "transpose_b"
        type: "bool"
        default_value {
          b: false
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "MaxPool"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        default_value {
          type: DT_FLOAT
        }
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_HALF
          }
        }
      }
      attr {
        name: "ksize"
        type: "list(int)"
        has_minimum: true
        minimum: 4
      }
      attr {
        name: "strides"
        type: "list(int)"
        has_minimum: true
        minimum: 4
      }
      attr {
        name: "padding"
        type: "string"
        allowed_values {
          list {
            s: "SAME"
            s: "VALID"
          }
        }
      }
      attr {
        name: "data_format"
        type: "string"
        default_value {
          s: "NHWC"
        }
        allowed_values {
          list {
            s: "NHWC"
            s: "NCHW"
          }
        }
      }
    }
    op {
      name: "MaxPoolGrad"
      input_arg {
        name: "orig_input"
        type_attr: "T"
      }
      input_arg {
        name: "orig_output"
        type_attr: "T"
      }
      input_arg {
        name: "grad"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "ksize"
        type: "list(int)"
        has_minimum: true
        minimum: 4
      }
      attr {
        name: "strides"
        type: "list(int)"
        has_minimum: true
        minimum: 4
      }
      attr {
        name: "padding"
        type: "string"
        allowed_values {
          list {
            s: "SAME"
            s: "VALID"
          }
        }
      }
      attr {
        name: "data_format"
        type: "string"
        default_value {
          s: "NHWC"
        }
        allowed_values {
          list {
            s: "NHWC"
            s: "NCHW"
          }
        }
      }
      attr {
        name: "T"
        type: "type"
        default_value {
          type: DT_FLOAT
        }
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_HALF
          }
        }
      }
    }
    op {
      name: "Maximum"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
      is_commutative: true
    }
    op {
      name: "Mean"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "reduction_indices"
        type_attr: "Tidx"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "keep_dims"
        type: "bool"
        default_value {
          b: false
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "Tidx"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "MergeSummary"
      input_arg {
        name: "inputs"
        type: DT_STRING
        number_attr: "N"
      }
      output_arg {
        name: "summary"
        type: DT_STRING
      }
      attr {
        name: "N"
        type: "int"
        has_minimum: true
        minimum: 1
      }
    }
    op {
      name: "Mul"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_UINT8
            type: DT_INT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
      is_commutative: true
    }
    op {
      name: "Neg"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "NoOp"
    }
    op {
      name: "Pack"
      input_arg {
        name: "values"
        type_attr: "T"
        number_attr: "N"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "N"
        type: "int"
        has_minimum: true
        minimum: 1
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "axis"
        type: "int"
        default_value {
          i: 0
        }
      }
    }
    op {
      name: "Placeholder"
      output_arg {
        name: "output"
        type_attr: "dtype"
      }
      attr {
        name: "dtype"
        type: "type"
      }
      attr {
        name: "shape"
        type: "shape"
        default_value {
          shape {
          }
        }
      }
    }
    op {
      name: "Prod"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "reduction_indices"
        type_attr: "Tidx"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "keep_dims"
        type: "bool"
        default_value {
          b: false
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "Tidx"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "RandomStandardNormal"
      input_arg {
        name: "shape"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "dtype"
      }
      attr {
        name: "seed"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "seed2"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "dtype"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
      is_stateful: true
    }
    op {
      name: "RandomUniform"
      input_arg {
        name: "shape"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "dtype"
      }
      attr {
        name: "seed"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "seed2"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "dtype"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
      is_stateful: true
    }
    op {
      name: "Relu"
      input_arg {
        name: "features"
        type_attr: "T"
      }
      output_arg {
        name: "activations"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_UINT8
            type: DT_INT16
            type: DT_INT8
            type: DT_UINT16
            type: DT_HALF
          }
        }
      }
    }
    op {
      name: "ReluGrad"
      input_arg {
        name: "gradients"
        type_attr: "T"
      }
      input_arg {
        name: "features"
        type_attr: "T"
      }
      output_arg {
        name: "backprops"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_UINT8
            type: DT_INT16
            type: DT_INT8
            type: DT_UINT16
            type: DT_HALF
          }
        }
      }
    }
    op {
      name: "Reshape"
      input_arg {
        name: "tensor"
        type_attr: "T"
      }
      input_arg {
        name: "shape"
        type_attr: "Tshape"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "Tshape"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "RestoreSlice"
      input_arg {
        name: "file_pattern"
        type: DT_STRING
      }
      input_arg {
        name: "tensor_name"
        type: DT_STRING
      }
      input_arg {
        name: "shape_and_slice"
        type: DT_STRING
      }
      output_arg {
        name: "tensor"
        type_attr: "dt"
      }
      attr {
        name: "dt"
        type: "type"
      }
      attr {
        name: "preferred_shard"
        type: "int"
        default_value {
          i: -1
        }
      }
    }
    op {
      name: "SaveSlices"
      input_arg {
        name: "filename"
        type: DT_STRING
      }
      input_arg {
        name: "tensor_names"
        type: DT_STRING
      }
      input_arg {
        name: "shapes_and_slices"
        type: DT_STRING
      }
      input_arg {
        name: "data"
        type_list_attr: "T"
      }
      attr {
        name: "T"
        type: "list(type)"
        has_minimum: true
        minimum: 1
      }
    }
    op {
      name: "Shape"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "out_type"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "out_type"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "Slice"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "begin"
        type_attr: "Index"
      }
      input_arg {
        name: "size"
        type_attr: "Index"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "Index"
        type: "type"
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "SoftmaxCrossEntropyWithLogits"
      input_arg {
        name: "features"
        type_attr: "T"
      }
      input_arg {
        name: "labels"
        type_attr: "T"
      }
      output_arg {
        name: "loss"
        type_attr: "T"
      }
      output_arg {
        name: "backprop"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
    }
    op {
      name: "Square"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "Sub"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT64
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "Sum"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "reduction_indices"
        type_attr: "Tidx"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "keep_dims"
        type: "bool"
        default_value {
          b: false
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_INT32
            type: DT_UINT8
            type: DT_UINT16
            type: DT_INT16
            type: DT_INT8
            type: DT_COMPLEX64
            type: DT_COMPLEX128
            type: DT_QINT8
            type: DT_QUINT8
            type: DT_QINT32
            type: DT_HALF
          }
        }
      }
      attr {
        name: "Tidx"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "Tanh"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "TanhGrad"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      input_arg {
        name: "y"
        type_attr: "T"
      }
      output_arg {
        name: "z"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
            type: DT_COMPLEX64
            type: DT_COMPLEX128
          }
        }
      }
    }
    op {
      name: "Tile"
      input_arg {
        name: "input"
        type_attr: "T"
      }
      input_arg {
        name: "multiples"
        type_attr: "Tmultiples"
      }
      output_arg {
        name: "output"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
      attr {
        name: "Tmultiples"
        type: "type"
        default_value {
          type: DT_INT32
        }
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
    }
    op {
      name: "TruncatedNormal"
      input_arg {
        name: "shape"
        type_attr: "T"
      }
      output_arg {
        name: "output"
        type_attr: "dtype"
      }
      attr {
        name: "seed"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "seed2"
        type: "int"
        default_value {
          i: 0
        }
      }
      attr {
        name: "dtype"
        type: "type"
        allowed_values {
          list {
            type: DT_HALF
            type: DT_FLOAT
            type: DT_DOUBLE
          }
        }
      }
      attr {
        name: "T"
        type: "type"
        allowed_values {
          list {
            type: DT_INT32
            type: DT_INT64
          }
        }
      }
      is_stateful: true
    }
    op {
      name: "Variable"
      output_arg {
        name: "ref"
        type_attr: "dtype"
        is_ref: true
      }
      attr {
        name: "shape"
        type: "shape"
      }
      attr {
        name: "dtype"
        type: "type"
      }
      attr {
        name: "container"
        type: "string"
        default_value {
          s: ""
        }
      }
      attr {
        name: "shared_name"
        type: "string"
        default_value {
          s: ""
        }
      }
      is_stateful: true
    }
    op {
      name: "ZerosLike"
      input_arg {
        name: "x"
        type_attr: "T"
      }
      output_arg {
        name: "y"
        type_attr: "T"
      }
      attr {
        name: "T"
        type: "type"
      }
    }
  }
}
graph_def {
  node {
    name: "inputs/x_input"
    op: "Placeholder"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 3200
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
  }
  node {
    name: "inputs/y_input"
    op: "Placeholder"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
  }
  node {
    name: "inputs/Placeholder"
    op: "Placeholder"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
  }
  node {
    name: "input_reshape/Reshape/shape"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 4
            }
          }
          tensor_content: "\377\377\377\377P\000\000\000(\000\000\000\001\000\000\000"
        }
      }
    }
  }
  node {
    name: "input_reshape/Reshape"
    op: "Reshape"
    input: "inputs/x_input"
    input: "input_reshape/Reshape/shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 80
            }
            dim {
              size: 40
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "input_reshape/ImageSummary/tag"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "inputs"
        }
      }
    }
  }
  node {
    name: "input_reshape/ImageSummary"
    op: "ImageSummary"
    input: "input_reshape/ImageSummary/tag"
    input: "input_reshape/Reshape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "bad_color"
      value {
        tensor {
          dtype: DT_UINT8
          tensor_shape {
            dim {
              size: 4
            }
          }
          int_val: 255
          int_val: 0
          int_val: 0
          int_val: 255
        }
      }
    }
    attr {
      key: "max_images"
      value {
        i: 1
      }
    }
  }
  node {
    name: "truncated_normal/shape"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 4
            }
          }
          tensor_content: "\020\000\000\000\020\000\000\000\001\000\000\000\n\000\000\000"
        }
      }
    }
  }
  node {
    name: "truncated_normal/mean"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "truncated_normal/stddev"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "truncated_normal/TruncatedNormal"
    op: "TruncatedNormal"
    input: "truncated_normal/shape"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "truncated_normal/mul"
    op: "Mul"
    input: "truncated_normal/TruncatedNormal"
    input: "truncated_normal/stddev"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "truncated_normal"
    op: "Add"
    input: "truncated_normal/mul"
    input: "truncated_normal/mean"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "Variable"
    op: "Variable"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "Variable/Assign"
    op: "Assign"
    input: "Variable"
    input: "truncated_normal"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "Variable/read"
    op: "Identity"
    input: "Variable"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 10
            }
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "Variable_1"
    op: "Variable"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "Variable_1/Assign"
    op: "Assign"
    input: "Variable_1"
    input: "Const"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "Variable_1/read"
    op: "Identity"
    input: "Variable_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "Conv2D"
    op: "Conv2D"
    input: "input_reshape/Reshape"
    input: "Variable/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 80
            }
            dim {
              size: 40
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "padding"
      value {
        s: "SAME"
      }
    }
    attr {
      key: "strides"
      value {
        list {
          i: 1
          i: 1
          i: 1
          i: 1
        }
      }
    }
    attr {
      key: "use_cudnn_on_gpu"
      value {
        b: true
      }
    }
  }
  node {
    name: "add"
    op: "Add"
    input: "Conv2D"
    input: "Variable_1/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 80
            }
            dim {
              size: 40
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "Relu"
    op: "Relu"
    input: "add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 80
            }
            dim {
              size: 40
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "MaxPool"
    op: "MaxPool"
    input: "Relu"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 40
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "ksize"
      value {
        list {
          i: 1
          i: 2
          i: 2
          i: 1
        }
      }
    }
    attr {
      key: "padding"
      value {
        s: "SAME"
      }
    }
    attr {
      key: "strides"
      value {
        list {
          i: 1
          i: 2
          i: 2
          i: 1
        }
      }
    }
  }
  node {
    name: "truncated_normal_1/shape"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 4
            }
          }
          tensor_content: "\n\000\000\000\004\000\000\000\n\000\000\000\n\000\000\000"
        }
      }
    }
  }
  node {
    name: "truncated_normal_1/mean"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "truncated_normal_1/stddev"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "truncated_normal_1/TruncatedNormal"
    op: "TruncatedNormal"
    input: "truncated_normal_1/shape"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "truncated_normal_1/mul"
    op: "Mul"
    input: "truncated_normal_1/TruncatedNormal"
    input: "truncated_normal_1/stddev"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "truncated_normal_1"
    op: "Add"
    input: "truncated_normal_1/mul"
    input: "truncated_normal_1/mean"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "Variable_2"
    op: "Variable"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "Variable_2/Assign"
    op: "Assign"
    input: "Variable_2"
    input: "truncated_normal_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "Variable_2/read"
    op: "Identity"
    input: "Variable_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 10
            }
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "Variable_3"
    op: "Variable"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "Variable_3/Assign"
    op: "Assign"
    input: "Variable_3"
    input: "Const_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "Variable_3/read"
    op: "Identity"
    input: "Variable_3"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "Conv2D_1"
    op: "Conv2D"
    input: "MaxPool"
    input: "Variable_2/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 40
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "padding"
      value {
        s: "SAME"
      }
    }
    attr {
      key: "strides"
      value {
        list {
          i: 1
          i: 1
          i: 1
          i: 1
        }
      }
    }
    attr {
      key: "use_cudnn_on_gpu"
      value {
        b: true
      }
    }
  }
  node {
    name: "add_1"
    op: "Add"
    input: "Conv2D_1"
    input: "Variable_3/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 40
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "Relu_1"
    op: "Relu"
    input: "add_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 40
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "MaxPool_1"
    op: "MaxPool"
    input: "Relu_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "ksize"
      value {
        list {
          i: 1
          i: 2
          i: 2
          i: 1
        }
      }
    }
    attr {
      key: "padding"
      value {
        s: "SAME"
      }
    }
    attr {
      key: "strides"
      value {
        list {
          i: 1
          i: 2
          i: 2
          i: 1
        }
      }
    }
  }
  node {
    name: "Reshape/shape"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\377\377\377\377\320\007\000\000"
        }
      }
    }
  }
  node {
    name: "Reshape"
    op: "Reshape"
    input: "MaxPool_1"
    input: "Reshape/shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 2000
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/weights/random_normal/shape"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\320\007\000\000\024\000\000\000"
        }
      }
    }
  }
  node {
    name: "layer3/weights/random_normal/mean"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "layer3/weights/random_normal/stddev"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "layer3/weights/random_normal/RandomStandardNormal"
    op: "RandomStandardNormal"
    input: "layer3/weights/random_normal/shape"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "layer3/weights/random_normal/mul"
    op: "Mul"
    input: "layer3/weights/random_normal/RandomStandardNormal"
    input: "layer3/weights/random_normal/stddev"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/weights/random_normal"
    op: "Add"
    input: "layer3/weights/random_normal/mul"
    input: "layer3/weights/random_normal/mean"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/weights/W"
    op: "Variable"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: 20
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "layer3/weights/W/Assign"
    op: "Assign"
    input: "layer3/weights/W"
    input: "layer3/weights/random_normal"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "layer3/weights/W/read"
    op: "Identity"
    input: "layer3/weights/W"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/weights/HistogramSummary/tag"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "layer3/weights"
        }
      }
    }
  }
  node {
    name: "layer3/weights/HistogramSummary"
    op: "HistogramSummary"
    input: "layer3/weights/HistogramSummary/tag"
    input: "layer3/weights/W/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "layer3/biases/zeros"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "layer3/biases/add/y"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "layer3/biases/add"
    op: "Add"
    input: "layer3/biases/zeros"
    input: "layer3/biases/add/y"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/biases/b"
    op: "Variable"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 20
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "layer3/biases/b/Assign"
    op: "Assign"
    input: "layer3/biases/b"
    input: "layer3/biases/add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "layer3/biases/b/read"
    op: "Identity"
    input: "layer3/biases/b"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/biases/HistogramSummary/tag"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "layer3/biases"
        }
      }
    }
  }
  node {
    name: "layer3/biases/HistogramSummary"
    op: "HistogramSummary"
    input: "layer3/biases/HistogramSummary/tag"
    input: "layer3/biases/b/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/MatMul"
    op: "MatMul"
    input: "Reshape"
    input: "layer3/weights/W/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/Add"
    op: "Add"
    input: "layer3/Wx_plus_b/MatMul"
    input: "layer3/biases/b/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/Shape"
    op: "Shape"
    input: "layer3/Wx_plus_b/Add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/random_uniform/min"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/random_uniform/max"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/random_uniform/RandomUniform"
    op: "RandomUniform"
    input: "layer3/Wx_plus_b/dropout/Shape"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/random_uniform/sub"
    op: "Sub"
    input: "layer3/Wx_plus_b/dropout/random_uniform/max"
    input: "layer3/Wx_plus_b/dropout/random_uniform/min"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/random_uniform/mul"
    op: "Mul"
    input: "layer3/Wx_plus_b/dropout/random_uniform/RandomUniform"
    input: "layer3/Wx_plus_b/dropout/random_uniform/sub"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/random_uniform"
    op: "Add"
    input: "layer3/Wx_plus_b/dropout/random_uniform/mul"
    input: "layer3/Wx_plus_b/dropout/random_uniform/min"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/add"
    op: "Add"
    input: "inputs/Placeholder"
    input: "layer3/Wx_plus_b/dropout/random_uniform"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/Floor"
    op: "Floor"
    input: "layer3/Wx_plus_b/dropout/add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/Div"
    op: "Div"
    input: "layer3/Wx_plus_b/Add"
    input: "inputs/Placeholder"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "layer3/Wx_plus_b/dropout/mul"
    op: "Mul"
    input: "layer3/Wx_plus_b/dropout/Div"
    input: "layer3/Wx_plus_b/dropout/Floor"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/Tanh"
    op: "Tanh"
    input: "layer3/Wx_plus_b/dropout/mul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "layer3/HistogramSummary/tag"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "layer3/outputs"
        }
      }
    }
  }
  node {
    name: "layer3/HistogramSummary"
    op: "HistogramSummary"
    input: "layer3/HistogramSummary/tag"
    input: "layer3/Tanh"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "layer4/weights/random_normal/shape"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\024\000\000\000\n\000\000\000"
        }
      }
    }
  }
  node {
    name: "layer4/weights/random_normal/mean"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "layer4/weights/random_normal/stddev"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "layer4/weights/random_normal/RandomStandardNormal"
    op: "RandomStandardNormal"
    input: "layer4/weights/random_normal/shape"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "layer4/weights/random_normal/mul"
    op: "Mul"
    input: "layer4/weights/random_normal/RandomStandardNormal"
    input: "layer4/weights/random_normal/stddev"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "layer4/weights/random_normal"
    op: "Add"
    input: "layer4/weights/random_normal/mul"
    input: "layer4/weights/random_normal/mean"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "layer4/weights/W"
    op: "Variable"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "layer4/weights/W/Assign"
    op: "Assign"
    input: "layer4/weights/W"
    input: "layer4/weights/random_normal"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "layer4/weights/W/read"
    op: "Identity"
    input: "layer4/weights/W"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "layer4/weights/HistogramSummary/tag"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "layer4/weights"
        }
      }
    }
  }
  node {
    name: "layer4/weights/HistogramSummary"
    op: "HistogramSummary"
    input: "layer4/weights/HistogramSummary/tag"
    input: "layer4/weights/W/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "layer4/biases/zeros"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "layer4/biases/add/y"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.10000000149
        }
      }
    }
  }
  node {
    name: "layer4/biases/add"
    op: "Add"
    input: "layer4/biases/zeros"
    input: "layer4/biases/add/y"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "layer4/biases/b"
    op: "Variable"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "layer4/biases/b/Assign"
    op: "Assign"
    input: "layer4/biases/b"
    input: "layer4/biases/add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "layer4/biases/b/read"
    op: "Identity"
    input: "layer4/biases/b"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "layer4/biases/HistogramSummary/tag"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "layer4/biases"
        }
      }
    }
  }
  node {
    name: "layer4/biases/HistogramSummary"
    op: "HistogramSummary"
    input: "layer4/biases/HistogramSummary/tag"
    input: "layer4/biases/b/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/MatMul"
    op: "MatMul"
    input: "layer3/Tanh"
    input: "layer4/weights/W/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/Add"
    op: "Add"
    input: "layer4/Wx_plus_b/MatMul"
    input: "layer4/biases/b/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/Shape"
    op: "Shape"
    input: "layer4/Wx_plus_b/Add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/random_uniform/min"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/random_uniform/max"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/random_uniform/RandomUniform"
    op: "RandomUniform"
    input: "layer4/Wx_plus_b/dropout/Shape"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "seed"
      value {
        i: 0
      }
    }
    attr {
      key: "seed2"
      value {
        i: 0
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/random_uniform/sub"
    op: "Sub"
    input: "layer4/Wx_plus_b/dropout/random_uniform/max"
    input: "layer4/Wx_plus_b/dropout/random_uniform/min"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/random_uniform/mul"
    op: "Mul"
    input: "layer4/Wx_plus_b/dropout/random_uniform/RandomUniform"
    input: "layer4/Wx_plus_b/dropout/random_uniform/sub"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/random_uniform"
    op: "Add"
    input: "layer4/Wx_plus_b/dropout/random_uniform/mul"
    input: "layer4/Wx_plus_b/dropout/random_uniform/min"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/add"
    op: "Add"
    input: "inputs/Placeholder"
    input: "layer4/Wx_plus_b/dropout/random_uniform"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/Floor"
    op: "Floor"
    input: "layer4/Wx_plus_b/dropout/add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/Div"
    op: "Div"
    input: "layer4/Wx_plus_b/Add"
    input: "inputs/Placeholder"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "layer4/Wx_plus_b/dropout/mul"
    op: "Mul"
    input: "layer4/Wx_plus_b/dropout/Div"
    input: "layer4/Wx_plus_b/dropout/Floor"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "layer4/HistogramSummary/tag"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "layer4/outputs"
        }
      }
    }
  }
  node {
    name: "layer4/HistogramSummary"
    op: "HistogramSummary"
    input: "layer4/HistogramSummary/tag"
    input: "layer4/Wx_plus_b/dropout/mul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "loss/Rank"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 2
        }
      }
    }
  }
  node {
    name: "loss/Shape"
    op: "Shape"
    input: "layer4/Wx_plus_b/dropout/mul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "loss/Rank_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 2
        }
      }
    }
  }
  node {
    name: "loss/Shape_1"
    op: "Shape"
    input: "layer4/Wx_plus_b/dropout/mul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "loss/Sub/y"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "loss/Sub"
    op: "Sub"
    input: "loss/Rank_1"
    input: "loss/Sub/y"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "loss/Slice/begin"
    op: "Pack"
    input: "loss/Sub"
    attr {
      key: "N"
      value {
        i: 1
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  node {
    name: "loss/Slice/size"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "loss/Slice"
    op: "Slice"
    input: "loss/Shape_1"
    input: "loss/Slice/begin"
    input: "loss/Slice/size"
    attr {
      key: "Index"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "loss/concat/concat_dim"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "loss/concat/values_0"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: -1
        }
      }
    }
  }
  node {
    name: "loss/concat"
    op: "Concat"
    input: "loss/concat/concat_dim"
    input: "loss/concat/values_0"
    input: "loss/Slice"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
  }
  node {
    name: "loss/Reshape"
    op: "Reshape"
    input: "layer4/Wx_plus_b/dropout/mul"
    input: "loss/concat"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "loss/Rank_2"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 2
        }
      }
    }
  }
  node {
    name: "loss/Shape_2"
    op: "Shape"
    input: "inputs/y_input"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "loss/Sub_1/y"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "loss/Sub_1"
    op: "Sub"
    input: "loss/Rank_2"
    input: "loss/Sub_1/y"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "loss/Slice_1/begin"
    op: "Pack"
    input: "loss/Sub_1"
    attr {
      key: "N"
      value {
        i: 1
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  node {
    name: "loss/Slice_1/size"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "loss/Slice_1"
    op: "Slice"
    input: "loss/Shape_2"
    input: "loss/Slice_1/begin"
    input: "loss/Slice_1/size"
    attr {
      key: "Index"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "loss/concat_1/concat_dim"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "loss/concat_1/values_0"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: -1
        }
      }
    }
  }
  node {
    name: "loss/concat_1"
    op: "Concat"
    input: "loss/concat_1/concat_dim"
    input: "loss/concat_1/values_0"
    input: "loss/Slice_1"
    attr {
      key: "N"
      value {
        i: 2
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
  }
  node {
    name: "loss/Reshape_1"
    op: "Reshape"
    input: "inputs/y_input"
    input: "loss/concat_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "loss/SoftmaxCrossEntropyWithLogits"
    op: "SoftmaxCrossEntropyWithLogits"
    input: "loss/Reshape"
    input: "loss/Reshape_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "loss/Sub_2/y"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "loss/Sub_2"
    op: "Sub"
    input: "loss/Rank"
    input: "loss/Sub_2/y"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "loss/Slice_2/begin"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "loss/Slice_2/size"
    op: "Pack"
    input: "loss/Sub_2"
    attr {
      key: "N"
      value {
        i: 1
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "axis"
      value {
        i: 0
      }
    }
  }
  node {
    name: "loss/Slice_2"
    op: "Slice"
    input: "loss/Shape"
    input: "loss/Slice_2/begin"
    input: "loss/Slice_2/size"
    attr {
      key: "Index"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "loss/Reshape_2"
    op: "Reshape"
    input: "loss/SoftmaxCrossEntropyWithLogits"
    input: "loss/Slice_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "loss/Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "loss/Mean"
    op: "Mean"
    input: "loss/Reshape_2"
    input: "loss/Const"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/Shape"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 1.0
        }
      }
    }
  }
  node {
    name: "train/gradients/Fill"
    op: "Fill"
    input: "train/gradients/Shape"
    input: "train/gradients/Const"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Reshape/shape"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/Fill"
    input: "train/gradients/loss/Mean_grad/Reshape/shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Shape"
    op: "Shape"
    input: "loss/Reshape_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Tile"
    op: "Tile"
    input: "train/gradients/loss/Mean_grad/Reshape"
    input: "train/gradients/loss/Mean_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tmultiples"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Shape_1"
    op: "Shape"
    input: "loss/Reshape_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Shape_2"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Prod"
    op: "Prod"
    input: "train/gradients/loss/Mean_grad/Shape_1"
    input: "train/gradients/loss/Mean_grad/Const"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Const_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Prod_1"
    op: "Prod"
    input: "train/gradients/loss/Mean_grad/Shape_2"
    input: "train/gradients/loss/Mean_grad/Const_1"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Maximum/y"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Maximum"
    op: "Maximum"
    input: "train/gradients/loss/Mean_grad/Prod_1"
    input: "train/gradients/loss/Mean_grad/Maximum/y"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/floordiv"
    op: "Div"
    input: "train/gradients/loss/Mean_grad/Prod"
    input: "train/gradients/loss/Mean_grad/Maximum"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/Cast"
    op: "Cast"
    input: "train/gradients/loss/Mean_grad/floordiv"
    attr {
      key: "DstT"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "SrcT"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Mean_grad/truediv"
    op: "Div"
    input: "train/gradients/loss/Mean_grad/Tile"
    input: "train/gradients/loss/Mean_grad/Cast"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Reshape_2_grad/Shape"
    op: "Shape"
    input: "loss/SoftmaxCrossEntropyWithLogits"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/loss/Reshape_2_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/loss/Mean_grad/truediv"
    input: "train/gradients/loss/Reshape_2_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/zeros_like"
    op: "ZerosLike"
    input: "loss/SoftmaxCrossEntropyWithLogits:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: -1
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
    op: "ExpandDims"
    input: "train/gradients/loss/Reshape_2_grad/Reshape"
    input: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tdim"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/mul"
    op: "Mul"
    input: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
    input: "loss/SoftmaxCrossEntropyWithLogits:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/loss/Reshape_grad/Shape"
    op: "Shape"
    input: "layer4/Wx_plus_b/dropout/mul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/loss/Reshape_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/mul"
    input: "train/gradients/loss/Reshape_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Shape"
    op: "Shape"
    input: "layer4/Wx_plus_b/dropout/Div"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Shape_1"
    op: "Shape"
    input: "layer4/Wx_plus_b/dropout/Floor"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/BroadcastGradientArgs"
    op: "BroadcastGradientArgs"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Shape"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/mul"
    op: "Mul"
    input: "train/gradients/loss/Reshape_grad/Reshape"
    input: "layer4/Wx_plus_b/dropout/Floor"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Sum"
    op: "Sum"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/mul"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/BroadcastGradientArgs"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Sum"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/mul_1"
    op: "Mul"
    input: "layer4/Wx_plus_b/dropout/Div"
    input: "train/gradients/loss/Reshape_grad/Reshape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Sum_1"
    op: "Sum"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/mul_1"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/BroadcastGradientArgs:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Reshape_1"
    op: "Reshape"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Sum_1"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Reshape"
    input: "^train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Reshape_1"
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Reshape"
    input: "^train/gradients/layer4/Wx_plus_b/dropout/mul_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Reshape_1"
    input: "^train/gradients/layer4/Wx_plus_b/dropout/mul_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer4/Wx_plus_b/dropout/mul_grad/Reshape_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Shape"
    op: "Shape"
    input: "layer4/Wx_plus_b/Add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Shape_1"
    op: "Shape"
    input: "inputs/Placeholder"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/BroadcastGradientArgs"
    op: "BroadcastGradientArgs"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Shape"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/truediv"
    op: "Div"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/tuple/control_dependency"
    input: "inputs/Placeholder"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Sum"
    op: "Sum"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/truediv"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/BroadcastGradientArgs"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Sum"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Neg"
    op: "Neg"
    input: "layer4/Wx_plus_b/Add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Square"
    op: "Square"
    input: "inputs/Placeholder"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/truediv_1"
    op: "Div"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Neg"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Square"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/mul"
    op: "Mul"
    input: "train/gradients/layer4/Wx_plus_b/dropout/mul_grad/tuple/control_dependency"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/truediv_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Sum_1"
    op: "Sum"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/mul"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/BroadcastGradientArgs:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Reshape_1"
    op: "Reshape"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Sum_1"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Reshape"
    input: "^train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Reshape_1"
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Reshape"
    input: "^train/gradients/layer4/Wx_plus_b/dropout/Div_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Reshape_1"
    input: "^train/gradients/layer4/Wx_plus_b/dropout/Div_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer4/Wx_plus_b/dropout/Div_grad/Reshape_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/Add_grad/Shape"
    op: "Shape"
    input: "layer4/Wx_plus_b/MatMul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/Add_grad/Shape_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\001\000\000\000\n\000\000\000"
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/Add_grad/BroadcastGradientArgs"
    op: "BroadcastGradientArgs"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/Shape"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/Add_grad/Sum"
    op: "Sum"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/tuple/control_dependency"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/BroadcastGradientArgs"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/Add_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/Sum"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/Add_grad/Sum_1"
    op: "Sum"
    input: "train/gradients/layer4/Wx_plus_b/dropout/Div_grad/tuple/control_dependency"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/BroadcastGradientArgs:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/Add_grad/Reshape_1"
    op: "Reshape"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/Sum_1"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/Add_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/layer4/Wx_plus_b/Add_grad/Reshape"
    input: "^train/gradients/layer4/Wx_plus_b/Add_grad/Reshape_1"
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/Add_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/Reshape"
    input: "^train/gradients/layer4/Wx_plus_b/Add_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer4/Wx_plus_b/Add_grad/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/Add_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/Reshape_1"
    input: "^train/gradients/layer4/Wx_plus_b/Add_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer4/Wx_plus_b/Add_grad/Reshape_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/MatMul_grad/MatMul"
    op: "MatMul"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/tuple/control_dependency"
    input: "layer4/weights/W/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/MatMul_grad/MatMul_1"
    op: "MatMul"
    input: "layer3/Tanh"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/tuple/control_dependency"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: true
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/MatMul_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/layer4/Wx_plus_b/MatMul_grad/MatMul"
    input: "^train/gradients/layer4/Wx_plus_b/MatMul_grad/MatMul_1"
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/MatMul_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/layer4/Wx_plus_b/MatMul_grad/MatMul"
    input: "^train/gradients/layer4/Wx_plus_b/MatMul_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer4/Wx_plus_b/MatMul_grad/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer4/Wx_plus_b/MatMul_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/layer4/Wx_plus_b/MatMul_grad/MatMul_1"
    input: "^train/gradients/layer4/Wx_plus_b/MatMul_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer4/Wx_plus_b/MatMul_grad/MatMul_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Tanh_grad/TanhGrad"
    op: "TanhGrad"
    input: "layer3/Tanh"
    input: "train/gradients/layer4/Wx_plus_b/MatMul_grad/tuple/control_dependency"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Shape"
    op: "Shape"
    input: "layer3/Wx_plus_b/dropout/Div"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Shape_1"
    op: "Shape"
    input: "layer3/Wx_plus_b/dropout/Floor"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/BroadcastGradientArgs"
    op: "BroadcastGradientArgs"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Shape"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/mul"
    op: "Mul"
    input: "train/gradients/layer3/Tanh_grad/TanhGrad"
    input: "layer3/Wx_plus_b/dropout/Floor"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Sum"
    op: "Sum"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/mul"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/BroadcastGradientArgs"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Sum"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/mul_1"
    op: "Mul"
    input: "layer3/Wx_plus_b/dropout/Div"
    input: "train/gradients/layer3/Tanh_grad/TanhGrad"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Sum_1"
    op: "Sum"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/mul_1"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/BroadcastGradientArgs:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Reshape_1"
    op: "Reshape"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Sum_1"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Reshape"
    input: "^train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Reshape_1"
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Reshape"
    input: "^train/gradients/layer3/Wx_plus_b/dropout/mul_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Reshape_1"
    input: "^train/gradients/layer3/Wx_plus_b/dropout/mul_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer3/Wx_plus_b/dropout/mul_grad/Reshape_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Shape"
    op: "Shape"
    input: "layer3/Wx_plus_b/Add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Shape_1"
    op: "Shape"
    input: "inputs/Placeholder"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/BroadcastGradientArgs"
    op: "BroadcastGradientArgs"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Shape"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/truediv"
    op: "Div"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/tuple/control_dependency"
    input: "inputs/Placeholder"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Sum"
    op: "Sum"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/truediv"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/BroadcastGradientArgs"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Sum"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Neg"
    op: "Neg"
    input: "layer3/Wx_plus_b/Add"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Square"
    op: "Square"
    input: "inputs/Placeholder"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/truediv_1"
    op: "Div"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Neg"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Square"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/mul"
    op: "Mul"
    input: "train/gradients/layer3/Wx_plus_b/dropout/mul_grad/tuple/control_dependency"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/truediv_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Sum_1"
    op: "Sum"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/mul"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/BroadcastGradientArgs:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Reshape_1"
    op: "Reshape"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Sum_1"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Reshape"
    input: "^train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Reshape_1"
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Reshape"
    input: "^train/gradients/layer3/Wx_plus_b/dropout/Div_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Reshape_1"
    input: "^train/gradients/layer3/Wx_plus_b/dropout/Div_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer3/Wx_plus_b/dropout/Div_grad/Reshape_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/Add_grad/Shape"
    op: "Shape"
    input: "layer3/Wx_plus_b/MatMul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/Add_grad/Shape_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 2
            }
          }
          tensor_content: "\001\000\000\000\024\000\000\000"
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/Add_grad/BroadcastGradientArgs"
    op: "BroadcastGradientArgs"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/Shape"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/Add_grad/Sum"
    op: "Sum"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/tuple/control_dependency"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/BroadcastGradientArgs"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/Add_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/Sum"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/Add_grad/Sum_1"
    op: "Sum"
    input: "train/gradients/layer3/Wx_plus_b/dropout/Div_grad/tuple/control_dependency"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/BroadcastGradientArgs:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/Add_grad/Reshape_1"
    op: "Reshape"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/Sum_1"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/Add_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/layer3/Wx_plus_b/Add_grad/Reshape"
    input: "^train/gradients/layer3/Wx_plus_b/Add_grad/Reshape_1"
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/Add_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/Reshape"
    input: "^train/gradients/layer3/Wx_plus_b/Add_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer3/Wx_plus_b/Add_grad/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/Add_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/Reshape_1"
    input: "^train/gradients/layer3/Wx_plus_b/Add_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer3/Wx_plus_b/Add_grad/Reshape_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/MatMul_grad/MatMul"
    op: "MatMul"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/tuple/control_dependency"
    input: "layer3/weights/W/read"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 2000
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: false
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/MatMul_grad/MatMul_1"
    op: "MatMul"
    input: "Reshape"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/tuple/control_dependency"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "transpose_a"
      value {
        b: true
      }
    }
    attr {
      key: "transpose_b"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/MatMul_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/layer3/Wx_plus_b/MatMul_grad/MatMul"
    input: "^train/gradients/layer3/Wx_plus_b/MatMul_grad/MatMul_1"
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/MatMul_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/layer3/Wx_plus_b/MatMul_grad/MatMul"
    input: "^train/gradients/layer3/Wx_plus_b/MatMul_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer3/Wx_plus_b/MatMul_grad/MatMul"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 2000
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/layer3/Wx_plus_b/MatMul_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/layer3/Wx_plus_b/MatMul_grad/MatMul_1"
    input: "^train/gradients/layer3/Wx_plus_b/MatMul_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/layer3/Wx_plus_b/MatMul_grad/MatMul_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/Reshape_grad/Shape"
    op: "Shape"
    input: "MaxPool_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/Reshape_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/layer3/Wx_plus_b/MatMul_grad/tuple/control_dependency"
    input: "train/gradients/Reshape_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/MaxPool_1_grad/MaxPoolGrad"
    op: "MaxPoolGrad"
    input: "Relu_1"
    input: "MaxPool_1"
    input: "train/gradients/Reshape_grad/Reshape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 40
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "ksize"
      value {
        list {
          i: 1
          i: 2
          i: 2
          i: 1
        }
      }
    }
    attr {
      key: "padding"
      value {
        s: "SAME"
      }
    }
    attr {
      key: "strides"
      value {
        list {
          i: 1
          i: 2
          i: 2
          i: 1
        }
      }
    }
  }
  node {
    name: "train/gradients/Relu_1_grad/ReluGrad"
    op: "ReluGrad"
    input: "train/gradients/MaxPool_1_grad/MaxPoolGrad"
    input: "Relu_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 40
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/add_1_grad/Shape"
    op: "Shape"
    input: "Conv2D_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/add_1_grad/Shape_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 10
        }
      }
    }
  }
  node {
    name: "train/gradients/add_1_grad/BroadcastGradientArgs"
    op: "BroadcastGradientArgs"
    input: "train/gradients/add_1_grad/Shape"
    input: "train/gradients/add_1_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/add_1_grad/Sum"
    op: "Sum"
    input: "train/gradients/Relu_1_grad/ReluGrad"
    input: "train/gradients/add_1_grad/BroadcastGradientArgs"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/add_1_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/add_1_grad/Sum"
    input: "train/gradients/add_1_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 40
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/add_1_grad/Sum_1"
    op: "Sum"
    input: "train/gradients/Relu_1_grad/ReluGrad"
    input: "train/gradients/add_1_grad/BroadcastGradientArgs:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/add_1_grad/Reshape_1"
    op: "Reshape"
    input: "train/gradients/add_1_grad/Sum_1"
    input: "train/gradients/add_1_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/add_1_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/add_1_grad/Reshape"
    input: "^train/gradients/add_1_grad/Reshape_1"
  }
  node {
    name: "train/gradients/add_1_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/add_1_grad/Reshape"
    input: "^train/gradients/add_1_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/add_1_grad/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 40
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/add_1_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/add_1_grad/Reshape_1"
    input: "^train/gradients/add_1_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/add_1_grad/Reshape_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_1_grad/Shape"
    op: "Shape"
    input: "MaxPool"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_1_grad/Conv2DBackpropInput"
    op: "Conv2DBackpropInput"
    input: "train/gradients/Conv2D_1_grad/Shape"
    input: "Variable_2/read"
    input: "train/gradients/add_1_grad/tuple/control_dependency"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "padding"
      value {
        s: "SAME"
      }
    }
    attr {
      key: "strides"
      value {
        list {
          i: 1
          i: 1
          i: 1
          i: 1
        }
      }
    }
    attr {
      key: "use_cudnn_on_gpu"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_1_grad/Shape_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 4
            }
          }
          tensor_content: "\n\000\000\000\004\000\000\000\n\000\000\000\n\000\000\000"
        }
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_1_grad/Conv2DBackpropFilter"
    op: "Conv2DBackpropFilter"
    input: "MaxPool"
    input: "train/gradients/Conv2D_1_grad/Shape_1"
    input: "train/gradients/add_1_grad/tuple/control_dependency"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "padding"
      value {
        s: "SAME"
      }
    }
    attr {
      key: "strides"
      value {
        list {
          i: 1
          i: 1
          i: 1
          i: 1
        }
      }
    }
    attr {
      key: "use_cudnn_on_gpu"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_1_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/Conv2D_1_grad/Conv2DBackpropInput"
    input: "^train/gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  }
  node {
    name: "train/gradients/Conv2D_1_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/Conv2D_1_grad/Conv2DBackpropInput"
    input: "^train/gradients/Conv2D_1_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/Conv2D_1_grad/Conv2DBackpropInput"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 40
            }
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_1_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/Conv2D_1_grad/Conv2DBackpropFilter"
    input: "^train/gradients/Conv2D_1_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/Conv2D_1_grad/Conv2DBackpropFilter"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/MaxPool_grad/MaxPoolGrad"
    op: "MaxPoolGrad"
    input: "Relu"
    input: "MaxPool"
    input: "train/gradients/Conv2D_1_grad/tuple/control_dependency"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 80
            }
            dim {
              size: 40
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "ksize"
      value {
        list {
          i: 1
          i: 2
          i: 2
          i: 1
        }
      }
    }
    attr {
      key: "padding"
      value {
        s: "SAME"
      }
    }
    attr {
      key: "strides"
      value {
        list {
          i: 1
          i: 2
          i: 2
          i: 1
        }
      }
    }
  }
  node {
    name: "train/gradients/Relu_grad/ReluGrad"
    op: "ReluGrad"
    input: "train/gradients/MaxPool_grad/MaxPoolGrad"
    input: "Relu"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 80
            }
            dim {
              size: 40
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/add_grad/Shape"
    op: "Shape"
    input: "Conv2D"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/add_grad/Shape_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 10
        }
      }
    }
  }
  node {
    name: "train/gradients/add_grad/BroadcastGradientArgs"
    op: "BroadcastGradientArgs"
    input: "train/gradients/add_grad/Shape"
    input: "train/gradients/add_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/add_grad/Sum"
    op: "Sum"
    input: "train/gradients/Relu_grad/ReluGrad"
    input: "train/gradients/add_grad/BroadcastGradientArgs"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/add_grad/Reshape"
    op: "Reshape"
    input: "train/gradients/add_grad/Sum"
    input: "train/gradients/add_grad/Shape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 80
            }
            dim {
              size: 40
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/add_grad/Sum_1"
    op: "Sum"
    input: "train/gradients/Relu_grad/ReluGrad"
    input: "train/gradients/add_grad/BroadcastGradientArgs:1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/gradients/add_grad/Reshape_1"
    op: "Reshape"
    input: "train/gradients/add_grad/Sum_1"
    input: "train/gradients/add_grad/Shape_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tshape"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/add_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/add_grad/Reshape"
    input: "^train/gradients/add_grad/Reshape_1"
  }
  node {
    name: "train/gradients/add_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/add_grad/Reshape"
    input: "^train/gradients/add_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/add_grad/Reshape"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 80
            }
            dim {
              size: 40
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/add_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/add_grad/Reshape_1"
    input: "^train/gradients/add_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/add_grad/Reshape_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_grad/Shape"
    op: "Shape"
    input: "input_reshape/Reshape"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "out_type"
      value {
        type: DT_INT32
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_grad/Conv2DBackpropInput"
    op: "Conv2DBackpropInput"
    input: "train/gradients/Conv2D_grad/Shape"
    input: "Variable/read"
    input: "train/gradients/add_grad/tuple/control_dependency"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "padding"
      value {
        s: "SAME"
      }
    }
    attr {
      key: "strides"
      value {
        list {
          i: 1
          i: 1
          i: 1
          i: 1
        }
      }
    }
    attr {
      key: "use_cudnn_on_gpu"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_grad/Shape_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 4
            }
          }
          tensor_content: "\020\000\000\000\020\000\000\000\001\000\000\000\n\000\000\000"
        }
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_grad/Conv2DBackpropFilter"
    op: "Conv2DBackpropFilter"
    input: "input_reshape/Reshape"
    input: "train/gradients/Conv2D_grad/Shape_1"
    input: "train/gradients/add_grad/tuple/control_dependency"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "data_format"
      value {
        s: "NHWC"
      }
    }
    attr {
      key: "padding"
      value {
        s: "SAME"
      }
    }
    attr {
      key: "strides"
      value {
        list {
          i: 1
          i: 1
          i: 1
          i: 1
        }
      }
    }
    attr {
      key: "use_cudnn_on_gpu"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_grad/tuple/group_deps"
    op: "NoOp"
    input: "^train/gradients/Conv2D_grad/Conv2DBackpropInput"
    input: "^train/gradients/Conv2D_grad/Conv2DBackpropFilter"
  }
  node {
    name: "train/gradients/Conv2D_grad/tuple/control_dependency"
    op: "Identity"
    input: "train/gradients/Conv2D_grad/Conv2DBackpropInput"
    input: "^train/gradients/Conv2D_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/Conv2D_grad/Conv2DBackpropInput"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 80
            }
            dim {
              size: 40
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
  }
  node {
    name: "train/gradients/Conv2D_grad/tuple/control_dependency_1"
    op: "Identity"
    input: "train/gradients/Conv2D_grad/Conv2DBackpropFilter"
    input: "^train/gradients/Conv2D_grad/tuple/group_deps"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@train/gradients/Conv2D_grad/Conv2DBackpropFilter"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/beta1_power/initial_value"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.899999976158
        }
      }
    }
  }
  node {
    name: "train/beta1_power"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/beta1_power/Assign"
    op: "Assign"
    input: "train/beta1_power"
    input: "train/beta1_power/initial_value"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/beta1_power/read"
    op: "Identity"
    input: "train/beta1_power"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "train/beta2_power/initial_value"
    op: "Const"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.999000012875
        }
      }
    }
  }
  node {
    name: "train/beta2_power"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/beta2_power/Assign"
    op: "Assign"
    input: "train/beta2_power"
    input: "train/beta2_power/initial_value"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/beta2_power/read"
    op: "Identity"
    input: "train/beta2_power"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "train/zeros"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/Variable/Adam"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/Variable/Adam/Assign"
    op: "Assign"
    input: "train/Variable/Adam"
    input: "train/zeros"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/Variable/Adam/read"
    op: "Identity"
    input: "train/Variable/Adam"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/Variable/Adam_1"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/Variable/Adam_1/Assign"
    op: "Assign"
    input: "train/Variable/Adam_1"
    input: "train/zeros_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/Variable/Adam_1/read"
    op: "Identity"
    input: "train/Variable/Adam_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_2"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/Variable_1/Adam"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/Variable_1/Adam/Assign"
    op: "Assign"
    input: "train/Variable_1/Adam"
    input: "train/zeros_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/Variable_1/Adam/read"
    op: "Identity"
    input: "train/Variable_1/Adam"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_3"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/Variable_1/Adam_1"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/Variable_1/Adam_1/Assign"
    op: "Assign"
    input: "train/Variable_1/Adam_1"
    input: "train/zeros_3"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/Variable_1/Adam_1/read"
    op: "Identity"
    input: "train/Variable_1/Adam_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_4"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/Variable_2/Adam"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/Variable_2/Adam/Assign"
    op: "Assign"
    input: "train/Variable_2/Adam"
    input: "train/zeros_4"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/Variable_2/Adam/read"
    op: "Identity"
    input: "train/Variable_2/Adam"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_5"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/Variable_2/Adam_1"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/Variable_2/Adam_1/Assign"
    op: "Assign"
    input: "train/Variable_2/Adam_1"
    input: "train/zeros_5"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/Variable_2/Adam_1/read"
    op: "Identity"
    input: "train/Variable_2/Adam_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_6"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/Variable_3/Adam"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/Variable_3/Adam/Assign"
    op: "Assign"
    input: "train/Variable_3/Adam"
    input: "train/zeros_6"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/Variable_3/Adam/read"
    op: "Identity"
    input: "train/Variable_3/Adam"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_7"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/Variable_3/Adam_1"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/Variable_3/Adam_1/Assign"
    op: "Assign"
    input: "train/Variable_3/Adam_1"
    input: "train/zeros_7"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/Variable_3/Adam_1/read"
    op: "Identity"
    input: "train/Variable_3/Adam_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_8"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/layer3/weights/W/Adam"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: 20
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/layer3/weights/W/Adam/Assign"
    op: "Assign"
    input: "train/layer3/weights/W/Adam"
    input: "train/zeros_8"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/layer3/weights/W/Adam/read"
    op: "Identity"
    input: "train/layer3/weights/W/Adam"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_9"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/layer3/weights/W/Adam_1"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 2000
          }
          dim {
            size: 20
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/layer3/weights/W/Adam_1/Assign"
    op: "Assign"
    input: "train/layer3/weights/W/Adam_1"
    input: "train/zeros_9"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/layer3/weights/W/Adam_1/read"
    op: "Identity"
    input: "train/layer3/weights/W/Adam_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_10"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/layer3/biases/b/Adam"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 20
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/layer3/biases/b/Adam/Assign"
    op: "Assign"
    input: "train/layer3/biases/b/Adam"
    input: "train/zeros_10"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/layer3/biases/b/Adam/read"
    op: "Identity"
    input: "train/layer3/biases/b/Adam"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_11"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/layer3/biases/b/Adam_1"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 20
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/layer3/biases/b/Adam_1/Assign"
    op: "Assign"
    input: "train/layer3/biases/b/Adam_1"
    input: "train/zeros_11"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/layer3/biases/b/Adam_1/read"
    op: "Identity"
    input: "train/layer3/biases/b/Adam_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_12"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/layer4/weights/W/Adam"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/layer4/weights/W/Adam/Assign"
    op: "Assign"
    input: "train/layer4/weights/W/Adam"
    input: "train/zeros_12"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/layer4/weights/W/Adam/read"
    op: "Identity"
    input: "train/layer4/weights/W/Adam"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_13"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/layer4/weights/W/Adam_1"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/layer4/weights/W/Adam_1/Assign"
    op: "Assign"
    input: "train/layer4/weights/W/Adam_1"
    input: "train/zeros_13"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/layer4/weights/W/Adam_1/read"
    op: "Identity"
    input: "train/layer4/weights/W/Adam_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_14"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/layer4/biases/b/Adam"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/layer4/biases/b/Adam/Assign"
    op: "Assign"
    input: "train/layer4/biases/b/Adam"
    input: "train/zeros_14"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/layer4/biases/b/Adam/read"
    op: "Identity"
    input: "train/layer4/biases/b/Adam"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/zeros_15"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
          float_val: 0.0
        }
      }
    }
  }
  node {
    name: "train/layer4/biases/b/Adam_1"
    op: "Variable"
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "container"
      value {
        s: ""
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "shape"
      value {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
    attr {
      key: "shared_name"
      value {
        s: ""
      }
    }
  }
  node {
    name: "train/layer4/biases/b/Adam_1/Assign"
    op: "Assign"
    input: "train/layer4/biases/b/Adam_1"
    input: "train/zeros_15"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/layer4/biases/b/Adam_1/read"
    op: "Identity"
    input: "train/layer4/biases/b/Adam_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
  }
  node {
    name: "train/Adam/learning_rate"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 9.99999974738e-05
        }
      }
    }
  }
  node {
    name: "train/Adam/beta1"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.899999976158
        }
      }
    }
  }
  node {
    name: "train/Adam/beta2"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 0.999000012875
        }
      }
    }
  }
  node {
    name: "train/Adam/epsilon"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
          }
          float_val: 9.99999993923e-09
        }
      }
    }
  }
  node {
    name: "train/Adam/update_Variable/ApplyAdam"
    op: "ApplyAdam"
    input: "Variable"
    input: "train/Variable/Adam"
    input: "train/Variable/Adam_1"
    input: "train/beta1_power/read"
    input: "train/beta2_power/read"
    input: "train/Adam/learning_rate"
    input: "train/Adam/beta1"
    input: "train/Adam/beta2"
    input: "train/Adam/epsilon"
    input: "train/gradients/Conv2D_grad/tuple/control_dependency_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/Adam/update_Variable_1/ApplyAdam"
    op: "ApplyAdam"
    input: "Variable_1"
    input: "train/Variable_1/Adam"
    input: "train/Variable_1/Adam_1"
    input: "train/beta1_power/read"
    input: "train/beta2_power/read"
    input: "train/Adam/learning_rate"
    input: "train/Adam/beta1"
    input: "train/Adam/beta2"
    input: "train/Adam/epsilon"
    input: "train/gradients/add_grad/tuple/control_dependency_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/Adam/update_Variable_2/ApplyAdam"
    op: "ApplyAdam"
    input: "Variable_2"
    input: "train/Variable_2/Adam"
    input: "train/Variable_2/Adam_1"
    input: "train/beta1_power/read"
    input: "train/beta2_power/read"
    input: "train/Adam/learning_rate"
    input: "train/Adam/beta1"
    input: "train/Adam/beta2"
    input: "train/Adam/epsilon"
    input: "train/gradients/Conv2D_1_grad/tuple/control_dependency_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/Adam/update_Variable_3/ApplyAdam"
    op: "ApplyAdam"
    input: "Variable_3"
    input: "train/Variable_3/Adam"
    input: "train/Variable_3/Adam_1"
    input: "train/beta1_power/read"
    input: "train/beta2_power/read"
    input: "train/Adam/learning_rate"
    input: "train/Adam/beta1"
    input: "train/Adam/beta2"
    input: "train/Adam/epsilon"
    input: "train/gradients/add_1_grad/tuple/control_dependency_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/Adam/update_layer3/weights/W/ApplyAdam"
    op: "ApplyAdam"
    input: "layer3/weights/W"
    input: "train/layer3/weights/W/Adam"
    input: "train/layer3/weights/W/Adam_1"
    input: "train/beta1_power/read"
    input: "train/beta2_power/read"
    input: "train/Adam/learning_rate"
    input: "train/Adam/beta1"
    input: "train/Adam/beta2"
    input: "train/Adam/epsilon"
    input: "train/gradients/layer3/Wx_plus_b/MatMul_grad/tuple/control_dependency_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/Adam/update_layer3/biases/b/ApplyAdam"
    op: "ApplyAdam"
    input: "layer3/biases/b"
    input: "train/layer3/biases/b/Adam"
    input: "train/layer3/biases/b/Adam_1"
    input: "train/beta1_power/read"
    input: "train/beta2_power/read"
    input: "train/Adam/learning_rate"
    input: "train/Adam/beta1"
    input: "train/Adam/beta2"
    input: "train/Adam/epsilon"
    input: "train/gradients/layer3/Wx_plus_b/Add_grad/tuple/control_dependency_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/Adam/update_layer4/weights/W/ApplyAdam"
    op: "ApplyAdam"
    input: "layer4/weights/W"
    input: "train/layer4/weights/W/Adam"
    input: "train/layer4/weights/W/Adam_1"
    input: "train/beta1_power/read"
    input: "train/beta2_power/read"
    input: "train/Adam/learning_rate"
    input: "train/Adam/beta1"
    input: "train/Adam/beta2"
    input: "train/Adam/epsilon"
    input: "train/gradients/layer4/Wx_plus_b/MatMul_grad/tuple/control_dependency_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/Adam/update_layer4/biases/b/ApplyAdam"
    op: "ApplyAdam"
    input: "layer4/biases/b"
    input: "train/layer4/biases/b/Adam"
    input: "train/layer4/biases/b/Adam_1"
    input: "train/beta1_power/read"
    input: "train/beta2_power/read"
    input: "train/Adam/learning_rate"
    input: "train/Adam/beta1"
    input: "train/Adam/beta2"
    input: "train/Adam/epsilon"
    input: "train/gradients/layer4/Wx_plus_b/Add_grad/tuple/control_dependency_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
  }
  node {
    name: "train/Adam/mul"
    op: "Mul"
    input: "train/beta1_power/read"
    input: "train/Adam/beta1"
    input: "^train/Adam/update_Variable/ApplyAdam"
    input: "^train/Adam/update_Variable_1/ApplyAdam"
    input: "^train/Adam/update_Variable_2/ApplyAdam"
    input: "^train/Adam/update_Variable_3/ApplyAdam"
    input: "^train/Adam/update_layer3/weights/W/ApplyAdam"
    input: "^train/Adam/update_layer3/biases/b/ApplyAdam"
    input: "^train/Adam/update_layer4/weights/W/ApplyAdam"
    input: "^train/Adam/update_layer4/biases/b/ApplyAdam"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "train/Adam/Assign"
    op: "Assign"
    input: "train/beta1_power"
    input: "train/Adam/mul"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/Adam/mul_1"
    op: "Mul"
    input: "train/beta2_power/read"
    input: "train/Adam/beta2"
    input: "^train/Adam/update_Variable/ApplyAdam"
    input: "^train/Adam/update_Variable_1/ApplyAdam"
    input: "^train/Adam/update_Variable_2/ApplyAdam"
    input: "^train/Adam/update_Variable_3/ApplyAdam"
    input: "^train/Adam/update_layer3/weights/W/ApplyAdam"
    input: "^train/Adam/update_layer3/biases/b/ApplyAdam"
    input: "^train/Adam/update_layer4/weights/W/ApplyAdam"
    input: "^train/Adam/update_layer4/biases/b/ApplyAdam"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "train/Adam/Assign_1"
    op: "Assign"
    input: "train/beta2_power"
    input: "train/Adam/mul_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: false
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "train/Adam"
    op: "NoOp"
    input: "^train/Adam/update_Variable/ApplyAdam"
    input: "^train/Adam/update_Variable_1/ApplyAdam"
    input: "^train/Adam/update_Variable_2/ApplyAdam"
    input: "^train/Adam/update_Variable_3/ApplyAdam"
    input: "^train/Adam/update_layer3/weights/W/ApplyAdam"
    input: "^train/Adam/update_layer3/biases/b/ApplyAdam"
    input: "^train/Adam/update_layer4/weights/W/ApplyAdam"
    input: "^train/Adam/update_layer4/biases/b/ApplyAdam"
    input: "^train/Adam/Assign"
    input: "^train/Adam/Assign_1"
  }
  node {
    name: "save/Const"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "model"
        }
      }
    }
  }
  node {
    name: "save/save/tensor_names"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 26
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 26
            }
          }
          string_val: "Variable"
          string_val: "Variable_1"
          string_val: "Variable_2"
          string_val: "Variable_3"
          string_val: "layer3/biases/b"
          string_val: "layer3/weights/W"
          string_val: "layer4/biases/b"
          string_val: "layer4/weights/W"
          string_val: "train/Variable/Adam"
          string_val: "train/Variable/Adam_1"
          string_val: "train/Variable_1/Adam"
          string_val: "train/Variable_1/Adam_1"
          string_val: "train/Variable_2/Adam"
          string_val: "train/Variable_2/Adam_1"
          string_val: "train/Variable_3/Adam"
          string_val: "train/Variable_3/Adam_1"
          string_val: "train/beta1_power"
          string_val: "train/beta2_power"
          string_val: "train/layer3/biases/b/Adam"
          string_val: "train/layer3/biases/b/Adam_1"
          string_val: "train/layer3/weights/W/Adam"
          string_val: "train/layer3/weights/W/Adam_1"
          string_val: "train/layer4/biases/b/Adam"
          string_val: "train/layer4/biases/b/Adam_1"
          string_val: "train/layer4/weights/W/Adam"
          string_val: "train/layer4/weights/W/Adam_1"
        }
      }
    }
  }
  node {
    name: "save/save/shapes_and_slices"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 26
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: 26
            }
          }
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/save"
    op: "SaveSlices"
    input: "save/Const"
    input: "save/save/tensor_names"
    input: "save/save/shapes_and_slices"
    input: "Variable"
    input: "Variable_1"
    input: "Variable_2"
    input: "Variable_3"
    input: "layer3/biases/b"
    input: "layer3/weights/W"
    input: "layer4/biases/b"
    input: "layer4/weights/W"
    input: "train/Variable/Adam"
    input: "train/Variable/Adam_1"
    input: "train/Variable_1/Adam"
    input: "train/Variable_1/Adam_1"
    input: "train/Variable_2/Adam"
    input: "train/Variable_2/Adam_1"
    input: "train/Variable_3/Adam"
    input: "train/Variable_3/Adam_1"
    input: "train/beta1_power"
    input: "train/beta2_power"
    input: "train/layer3/biases/b/Adam"
    input: "train/layer3/biases/b/Adam_1"
    input: "train/layer3/weights/W/Adam"
    input: "train/layer3/weights/W/Adam_1"
    input: "train/layer4/biases/b/Adam"
    input: "train/layer4/biases/b/Adam_1"
    input: "train/layer4/weights/W/Adam"
    input: "train/layer4/weights/W/Adam_1"
    attr {
      key: "T"
      value {
        list {
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
          type: DT_FLOAT
        }
      }
    }
  }
  node {
    name: "save/control_dependency"
    op: "Identity"
    input: "save/Const"
    input: "^save/save"
    attr {
      key: "T"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@save/Const"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "save/restore_slice/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "Variable"
        }
      }
    }
  }
  node {
    name: "save/restore_slice/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice/tensor_name"
    input: "save/restore_slice/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign"
    op: "Assign"
    input: "Variable"
    input: "save/restore_slice"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_1/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "Variable_1"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_1/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_1"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_1/tensor_name"
    input: "save/restore_slice_1/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_1"
    op: "Assign"
    input: "Variable_1"
    input: "save/restore_slice_1"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_2/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "Variable_2"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_2/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_2"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_2/tensor_name"
    input: "save/restore_slice_2/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_2"
    op: "Assign"
    input: "Variable_2"
    input: "save/restore_slice_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_3/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "Variable_3"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_3/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_3"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_3/tensor_name"
    input: "save/restore_slice_3/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_3"
    op: "Assign"
    input: "Variable_3"
    input: "save/restore_slice_3"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_4/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "layer3/biases/b"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_4/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_4"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_4/tensor_name"
    input: "save/restore_slice_4/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_4"
    op: "Assign"
    input: "layer3/biases/b"
    input: "save/restore_slice_4"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_5/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "layer3/weights/W"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_5/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_5"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_5/tensor_name"
    input: "save/restore_slice_5/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_5"
    op: "Assign"
    input: "layer3/weights/W"
    input: "save/restore_slice_5"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_6/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "layer4/biases/b"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_6/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_6"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_6/tensor_name"
    input: "save/restore_slice_6/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_6"
    op: "Assign"
    input: "layer4/biases/b"
    input: "save/restore_slice_6"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_7/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "layer4/weights/W"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_7/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_7"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_7/tensor_name"
    input: "save/restore_slice_7/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_7"
    op: "Assign"
    input: "layer4/weights/W"
    input: "save/restore_slice_7"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_8/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/Variable/Adam"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_8/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_8"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_8/tensor_name"
    input: "save/restore_slice_8/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_8"
    op: "Assign"
    input: "train/Variable/Adam"
    input: "save/restore_slice_8"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_9/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/Variable/Adam_1"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_9/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_9"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_9/tensor_name"
    input: "save/restore_slice_9/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_9"
    op: "Assign"
    input: "train/Variable/Adam_1"
    input: "save/restore_slice_9"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 16
            }
            dim {
              size: 16
            }
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_10/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/Variable_1/Adam"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_10/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_10"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_10/tensor_name"
    input: "save/restore_slice_10/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_10"
    op: "Assign"
    input: "train/Variable_1/Adam"
    input: "save/restore_slice_10"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_11/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/Variable_1/Adam_1"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_11/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_11"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_11/tensor_name"
    input: "save/restore_slice_11/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_11"
    op: "Assign"
    input: "train/Variable_1/Adam_1"
    input: "save/restore_slice_11"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_1"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_12/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/Variable_2/Adam"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_12/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_12"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_12/tensor_name"
    input: "save/restore_slice_12/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_12"
    op: "Assign"
    input: "train/Variable_2/Adam"
    input: "save/restore_slice_12"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_13/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/Variable_2/Adam_1"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_13/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_13"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_13/tensor_name"
    input: "save/restore_slice_13/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_13"
    op: "Assign"
    input: "train/Variable_2/Adam_1"
    input: "save/restore_slice_13"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_2"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 4
            }
            dim {
              size: 10
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_14/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/Variable_3/Adam"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_14/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_14"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_14/tensor_name"
    input: "save/restore_slice_14/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_14"
    op: "Assign"
    input: "train/Variable_3/Adam"
    input: "save/restore_slice_14"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_15/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/Variable_3/Adam_1"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_15/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_15"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_15/tensor_name"
    input: "save/restore_slice_15/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_15"
    op: "Assign"
    input: "train/Variable_3/Adam_1"
    input: "save/restore_slice_15"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable_3"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_16/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/beta1_power"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_16/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_16"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_16/tensor_name"
    input: "save/restore_slice_16/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_16"
    op: "Assign"
    input: "train/beta1_power"
    input: "save/restore_slice_16"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_17/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/beta2_power"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_17/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_17"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_17/tensor_name"
    input: "save/restore_slice_17/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_17"
    op: "Assign"
    input: "train/beta2_power"
    input: "save/restore_slice_17"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@Variable"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_18/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/layer3/biases/b/Adam"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_18/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_18"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_18/tensor_name"
    input: "save/restore_slice_18/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_18"
    op: "Assign"
    input: "train/layer3/biases/b/Adam"
    input: "save/restore_slice_18"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_19/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/layer3/biases/b/Adam_1"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_19/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_19"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_19/tensor_name"
    input: "save/restore_slice_19/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_19"
    op: "Assign"
    input: "train/layer3/biases/b/Adam_1"
    input: "save/restore_slice_19"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_20/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/layer3/weights/W/Adam"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_20/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_20"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_20/tensor_name"
    input: "save/restore_slice_20/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_20"
    op: "Assign"
    input: "train/layer3/weights/W/Adam"
    input: "save/restore_slice_20"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_21/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/layer3/weights/W/Adam_1"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_21/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_21"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_21/tensor_name"
    input: "save/restore_slice_21/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_21"
    op: "Assign"
    input: "train/layer3/weights/W/Adam_1"
    input: "save/restore_slice_21"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer3/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 2000
            }
            dim {
              size: 20
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_22/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/layer4/biases/b/Adam"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_22/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_22"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_22/tensor_name"
    input: "save/restore_slice_22/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_22"
    op: "Assign"
    input: "train/layer4/biases/b/Adam"
    input: "save/restore_slice_22"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_23/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/layer4/biases/b/Adam_1"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_23/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_23"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_23/tensor_name"
    input: "save/restore_slice_23/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_23"
    op: "Assign"
    input: "train/layer4/biases/b/Adam_1"
    input: "save/restore_slice_23"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/biases/b"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_24/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/layer4/weights/W/Adam"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_24/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_24"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_24/tensor_name"
    input: "save/restore_slice_24/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_24"
    op: "Assign"
    input: "train/layer4/weights/W/Adam"
    input: "save/restore_slice_24"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_slice_25/tensor_name"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: "train/layer4/weights/W/Adam_1"
        }
      }
    }
  }
  node {
    name: "save/restore_slice_25/shape_and_slice"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_STRING
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_STRING
          tensor_shape {
          }
          string_val: ""
        }
      }
    }
  }
  node {
    name: "save/restore_slice_25"
    op: "RestoreSlice"
    input: "save/Const"
    input: "save/restore_slice_25/tensor_name"
    input: "save/restore_slice_25/shape_and_slice"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "dt"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "preferred_shard"
      value {
        i: -1
      }
    }
  }
  node {
    name: "save/Assign_25"
    op: "Assign"
    input: "train/layer4/weights/W/Adam_1"
    input: "save/restore_slice_25"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "_class"
      value {
        list {
          s: "loc:@layer4/weights/W"
        }
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 20
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "use_locking"
      value {
        b: true
      }
    }
    attr {
      key: "validate_shape"
      value {
        b: true
      }
    }
  }
  node {
    name: "save/restore_all"
    op: "NoOp"
    input: "^save/Assign"
    input: "^save/Assign_1"
    input: "^save/Assign_2"
    input: "^save/Assign_3"
    input: "^save/Assign_4"
    input: "^save/Assign_5"
    input: "^save/Assign_6"
    input: "^save/Assign_7"
    input: "^save/Assign_8"
    input: "^save/Assign_9"
    input: "^save/Assign_10"
    input: "^save/Assign_11"
    input: "^save/Assign_12"
    input: "^save/Assign_13"
    input: "^save/Assign_14"
    input: "^save/Assign_15"
    input: "^save/Assign_16"
    input: "^save/Assign_17"
    input: "^save/Assign_18"
    input: "^save/Assign_19"
    input: "^save/Assign_20"
    input: "^save/Assign_21"
    input: "^save/Assign_22"
    input: "^save/Assign_23"
    input: "^save/Assign_24"
    input: "^save/Assign_25"
  }
  node {
    name: "MergeSummary/MergeSummary"
    op: "MergeSummary"
    input: "input_reshape/ImageSummary"
    input: "layer3/weights/HistogramSummary"
    input: "layer3/biases/HistogramSummary"
    input: "layer3/HistogramSummary"
    input: "layer4/weights/HistogramSummary"
    input: "layer4/biases/HistogramSummary"
    input: "layer4/HistogramSummary"
    attr {
      key: "N"
      value {
        i: 7
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
  }
  node {
    name: "init"
    op: "NoOp"
    input: "^Variable/Assign"
    input: "^Variable_1/Assign"
    input: "^Variable_2/Assign"
    input: "^Variable_3/Assign"
    input: "^layer3/weights/W/Assign"
    input: "^layer3/biases/b/Assign"
    input: "^layer4/weights/W/Assign"
    input: "^layer4/biases/b/Assign"
    input: "^train/beta1_power/Assign"
    input: "^train/beta2_power/Assign"
    input: "^train/Variable/Adam/Assign"
    input: "^train/Variable/Adam_1/Assign"
    input: "^train/Variable_1/Adam/Assign"
    input: "^train/Variable_1/Adam_1/Assign"
    input: "^train/Variable_2/Adam/Assign"
    input: "^train/Variable_2/Adam_1/Assign"
    input: "^train/Variable_3/Adam/Assign"
    input: "^train/Variable_3/Adam_1/Assign"
    input: "^train/layer3/weights/W/Adam/Assign"
    input: "^train/layer3/weights/W/Adam_1/Assign"
    input: "^train/layer3/biases/b/Adam/Assign"
    input: "^train/layer3/biases/b/Adam_1/Assign"
    input: "^train/layer4/weights/W/Adam/Assign"
    input: "^train/layer4/weights/W/Adam_1/Assign"
    input: "^train/layer4/biases/b/Adam/Assign"
    input: "^train/layer4/biases/b/Adam_1/Assign"
  }
  node {
    name: "ArgMax/input"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1760
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: 1760
            }
            dim {
              size: 10
            }
          }
          tensor_content: "R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A8\241[@\232\266\363\277&\303\361@l\"H?\262c.@o\377\231\300\350g\272\300\346\017\327\277\250\206\000A0\352\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@3X\016@\305\266S\300\200\352#@Y\002\263@\210\251\364\277\374\325\364\2772\257\313\300,\221\273\277\232&\236@~{\224@}&\240\277\343\266e\300\021\375\254@\021\250\315@\213\225\213@\357T\204\300e\272\251\300\275j\325\275\245\245\030A\345J\331@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@T\362O@\033\032e\300]=\026@\035\350\254?\254\177\201\300uu\244\275;\374\207\300Xf\231\277l\';@\026\274G@T\362O@\033\032e\300]=\026@\035\350\254?\254\177\201\300uu\244\275;\374\207\300Xf\231\277l\';@\026\274G@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\273\376\373?\306\332\347\277\305\206\260@\235/\230\300h\260\210?5\215-\300\017\200:\300\332\231s\300\r\217\314@\021w\234@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@T\362O@\033\032e\300]=\026@\035\350\254?\254\177\201\300uu\244\275;\374\207\300Xf\231\277l\';@\026\274G@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\306\232Y@[\036\210\300O\226\261@\177\203\315=\352\226\031\275\'A\022\2779\324I\300\344XG?\231+\343@\335\311d@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\3454\032@~\026\177\300\260\210\270@K\\\212@\352\343\004@,\312\030\300^\232\250\300\244\202\004?\306\316\021Ag~\242@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@X\373m@c<<\300v\254\252@\350\0357\277\314@\014\300U\2075\3007y\231\300\235\222\276\300\r\330\240@\261-\001A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@m\342\353\277\253\254=\277\035\016\372?t\177\263\277o\346\'\277J\000~\300.r\201\300\236\367\314\300\317I)@\253\274\304@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@T\362O@\033\032e\300]=\026@\035\350\254?\254\177\201\300uu\244\275;\374\207\300Xf\231\277l\';@\026\274G@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\306\232Y@[\036\210\300O\226\261@\177\203\315=\352\226\031\275\'A\022\2779\324I\300\344XG?\231+\343@\335\311d@T\362O@\033\032e\300]=\026@\035\350\254?\254\177\201\300uu\244\275;\374\207\300Xf\231\277l\';@\026\274G@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\236\356B?\\&\343\277(\"\337@\002\"\253\277\362\0109@\371\314\227\300N\307o\300\232\311\002\300v\033\316@?\230\366@M\204\215@f\010\013\300\036\341\352@\244P\\\300\177\t\035?\005\312?\300\032dm\300h|\265\277\254\260\300@\n\323\277@m\342\353\277\253\254=\277\035\016\372?t\177\263\277o\346\'\277J\000~\300.r\201\300\236\367\314\300\317I)@\253\274\304@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\016Vj\276\'\005\301\277\340G\346@c\2238@\347i\240@\311\361\321\300W\202\273\300\302?\023\300.h\007A\200\\\023A\016Vj\276\'\005\301\277\340G\346@c\2238@\347i\240@\311\361\321\300W\202\273\300\302?\023\300.h\007A\200\\\023A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\345*M\300?}\014\300\216\221\271@\310g3\277\244\3377\300jN\177\300}Z\220\300O\363\240\300J;\257?\317\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3523M\300\323\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\346L\206\3008\263\366\277R\206\300@\033qa@\033fB\277\325\303\271\300\\\n\324\300KO\251\300g\177X@#\010\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\362\345\032?\212B\215\277\331\355q@a\n\270\275Cv\216\277C\033\210\300\037\340\232\300W\226\200\300\235v\021@\226\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@fwL\300\324I\014\300\002b\271@\254\3642\277\274\2147\300\332Z\177\300<b\220\300}\333\240\300p\220\257?\347\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\3513M\300\340\177\014\300\366\223\271@\330m3\277\324\3437\300\276M\177\300\023Z\220\300\211\364\240\300\0227\257?\320\366\347@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\271\241\350>o\337%\300\220\037\305@\362r3\300}\025\245\300\027n\017\300\023:\217\300\203\016\215\300\034\000q?O*\261@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3473M\300\346\177\014\300\366\223\271@\000n3\277\326\3437\300\272M\177\300\017Z\220\300\215\364\240\300\0327\257?\322\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\34321\300\246\374y\300\212\344\330@\244\246\\\300@\030r\300\326= \300\312\275\030\300\213\210\352\300%6\"@Iv\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\376Td?!\256\211\300(p\344@\033\237\261\300\265/\302\300\221xA\277\272}\026\300\213\242\326\300\253\332\006@\023 \322@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@_{\205?o?\237\300\345s%A\025\243\331\300q\306\003\300\204\225\237\277\373\262\240\277\333]\227\3008\005\311@\367\246\340@r\212\'\300\241\217\222\300\026\256\037AMW\226\300\276\013h>s\252?\300\0313\245\277\331C\253\300\365\262\326@\273\271\013A\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\376Td?!\256\211\300(p\344@\033\237\261\300\265/\302\300\221xA\277\272}\026\300\213\242\326\300\253\332\006@\023 \322@\376Td?!\256\211\300(p\344@\033\237\261\300\265/\302\300\221xA\277\272}\026\300\213\242\326\300\253\332\006@\023 \322@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\271\241\350>o\337%\300\220\037\305@\362r3\300}\025\245\300\027n\017\300\023:\217\300\203\016\215\300\034\000q?O*\261@_{\205?o?\237\300\345s%A\025\243\331\300q\306\003\300\204\225\237\277\373\262\240\277\333]\227\3008\005\311@\367\246\340@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004Ar\212\'\300\241\217\222\300\026\256\037AMW\226\300\276\013h>s\252?\300\0313\245\277\331C\253\300\365\262\326@\273\271\013A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\247P\206?\023G4\300+\320\230@\274\3725\300\364]\377\277\267^1\300Lc-\300\375\271\311\300Q\315]@\252\222\004A\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\0323M\300\t\203\014\300\334\224\271@ \2023\277\202\3457\300\002K\177\300\034X\220\300\251\366\240\300^;\257?\304\367\347@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A[\336\205?\001\0174\300\2229\230@(\2035\300BW\001\3009*1\300^\316-\300c#\312\300\277\035\\@1\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\326a\034?\217\017\215\277\253\274q@Aw\266\275\233 \216\277\331\035\210\3005\343\232\300\335\212\200\300!\216\021@\035\031\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A_{\205?o?\237\300\345s%A\025\243\331\300q\306\003\300\204\225\237\277\373\262\240\277\333]\227\3008\005\311@\367\246\340@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\34321\300\246\374y\300\212\344\330@\250\246\\\300@\030r\300\325= \300\311\275\030\300\213\210\352\300%6\"@Iv\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\323\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\017\203\231?\235%_\300\030\246\376@1\302\202\300,\252\376?\277\231P\300}[\317\277\"\331\212\300\272\253\363@\246\312\013A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A>\032$?(\'\234\277\265\rv@p\213\216\276\211&\226\2775\327\204\300\2773\226\300\024\235\205\300q\262\026@\251^\352@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\017\203\231?\235%_\300\030\246\376@1\302\202\300,\252\376?\277\231P\300}[\317\277\"\331\212\300\272\253\363@\246\312\013A\017\375\227@E\352\\\300=&\001A\227\344\257\300\365\246\210\275\324c\361\277|\265\007\300\365\313H\300M\226\334@_y\330@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@^sS?\"\266\370\277bC\210@\252?\270\277\021[\307\277\335\177a\300.\357r\300\337\266\244\300=;6@8M\370@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\235\313\277\277\177i\204@\276H\014\300\244VY\300_] \300)\304\231\300\235GY\300(c\354?&L\261@\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\t\242\210@|\305\277\277\032h\204@\2208\014\300\023EY\300\321j \300O\304\231\300_LY\300\266i\354?\271R\261@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\017\203\231?\235%_\300\030\246\376@1\302\202\300,\252\376?\277\231P\300}[\317\277\"\331\212\300\272\253\363@\246\312\013A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\325\204\233@7\205x\300\333\030\005A\367\r\306\300\265\220\227\276\034t\301\277`\333\312\277G\346m\300\375\375\345@\315\310\340@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A:`\034?d\014\215\277\321\273q@\001&\266\275\277\036\216\277\213\036\210\3000\344\232\300\305\211\200\300!\215\021@\244\030\350@\325\204\233@7\205x\300\333\030\005A\367\r\306\300\265\220\227\276\034t\301\277`\333\312\277G\346m\300\375\375\345@\315\310\340@\017\203\231?\235%_\300\030\246\376@1\302\202\300,\252\376?\277\231P\300}[\317\277\"\331\212\300\272\253\363@\246\312\013A\'\256\226@\022bM\300\330\271\243@\225\010\236\300\000\304\211\300\224\237\202\277\371\221+\300A8\266\300\311\314@@\020C\322@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\017\203\231?\235%_\300\030\246\376@1\302\202\300,\252\376?\277\231P\300}[\317\277\"\331\212\300\272\253\363@\246\312\013A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\352`\034?g\014\215\277\305\273q@\201(\266\275!\037\216\277\177\036\210\3003\344\232\300\306\211\200\300\006\215\021@\230\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\007\201\211@\031\217\314\277\304<\206@\342\207\026\300(\273\\\300\341\322\032\300\303\315\225\300s\333a\300\234\025\365?\3707\263@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@T\362O@\033\032e\300]=\026@\035\350\254?\254\177\201\300uu\244\275;\374\207\300Xf\231\277l\';@\026\274G@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\236\352v\277\213\010\224\300\022\254K@k\306\235@W\211\016\277K-\n\300M\321\210\300g.\214\300\267\000\321@\305\271\353@\236\352v\277\213\010\224\300\022\254K@k\306\235@W\211\016\277K-\n\300M\321\210\300g.\214\300\267\000\321@\305\271\353@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A&\315l=\307\334\"\300\330 \237@$\240\261?\373\313\300=\203\263\222\300>\231\232\300\235x\322\300\313\205\256@\360\223\034A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004AL\234\325<\251\233\234\300R\307=@`\0015?\234\354*\300K\233\257\276\032B\n\300\236\323\203\300\304\216\220@M\240\273@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\003\236\210@\275\303\277\277\265g\204@\3563\014\300\014@Y\300\251n \300Y\304\231\300\275MY\300\226k\354?\233T\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\006b\034?\357\017\215\277\307\274q@\301\200\266\275\317 \216\277\305\035\210\300\027\343\232\300\375\212\200\300A\216\021@,\031\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AL\234\325<\251\233\234\300R\307=@`\0015?\234\354*\300K\233\257\276\032B\n\300\236\323\203\300\304\216\220@M\240\273@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@r?\005@\321\313\340\276\206\341\274?\326\253M@O[\231\300 \306s\300\326\323\223\300Q\371*@Dj\246@SeV@{@!@M\226\t\300\362\021\035@\240\004\357>\207u\266\300,\266\024\300B\261\037\300\365\211\276>\226\267\313@m(\214@r?\005@\321\313\340\276\206\341\274?\326\253M@O[\231\300 \306s\300\326\323\223\300Q\371*@Dj\246@SeV@pG\007@\033\202\364?!\353^@\221;y@\237\303\001\300o\316\000\301\nL\351\300Z\365Z>Ja\304@;\272\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@r?\005@\321\313\340\276\206\341\274?\326\253M@O[\231\300 \306s\300\326\323\223\300Q\371*@Dj\246@SeV@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\302UP@\341\340w?\320\372\316@\2761\312\277\242N\007\276;6\327\300\250\211\202\300K\356\034@\235\303\004A\247\'\307@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\307\003\002@\266\030\244\277\243K\212\300lt\335\300\'\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@T\362O@\033\032e\300]=\026@\035\350\254?\254\177\201\300uu\244\275;\374\207\300Xf\231\277l\';@\026\274G@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@.\226\020@\025\340S\300%3$@mO\262@\300]\367\277@\351\362\277 \257\313\300D\373\272\277\210\000\236@\005\003\224@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@L\234\325<\251\233\234\300R\307=@`\0015?\234\354*\300K\233\257\276\032B\n\300\236\323\203\300\304\216\220@M\240\273@\236\352v\277\213\010\224\300\022\254K@k\306\235@W\211\016\277K-\n\300M\321\210\300g.\214\300\267\000\321@\305\271\353@(\351m@G\365;\300\036\230\252@0U5\277\376\032\014\300\023\3055\300_\245\231\300\323b\276\300\323\277\240@\375\"\001AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@\325\204\233@7\205x\300\333\030\005A\367\r\306\300\265\220\227\276\034t\301\277`\333\312\277G\346m\300\375\375\345@\315\310\340@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\266\214\023?\031v\005\300pS\217@\264<\322?4\333\034\300\235\377\013\301\342\343<\300\303JY\300\265\231\016@\177\224\271@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\353QF@!\204\005\277A\236\rAUm\211\3009\310\205\300\275\316\226\300\020\277m\300\331\344\003@\267\340\336@T9\220@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AP\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\313hO\300\276oK\300\202\t\320@A\350\203?\307\327\206\300\312\303\007\301\260\317\'\300\030\020\215\300VP\251?\251r\271@y\251<@V\031\034>\340\304\264@\266\322B\300\\\n\003\301m\030\207\300\247\361\231\300\263n\253=\252\2212@p\262\201@iF\305@\365=\264?i\210p@\030\223\001>5\257\244\300\r\305\262\300\322}\315\300\222Ep?\243L\235@4\370\236@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@I`\327@{Z\206>^\204\212@\330c3\277i\220\370\300c\270\017\301\373\022P\300n\363\333?\336\217i@C\240&@1\270\306\277\266L\022>\242Q\013Ae\t\002@>\020`>\303m\004\301\321\257\273\300\230\306\226?4\200\026AK\037\367@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\324r\336\277B\210*\2762\241\306@mp\240@\3331\244\300\364\202D\301\255O\242\300\206\3245\276\331\356\245@C\024\272@pG\007@\033\202\364?!\353^@\221;y@\237\303\001\300o\316\000\301\nL\351\300Z\365Z>Ja\304@;\272\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\321r\336\277*\210*\2762\241\306@mp\240@\3341\244\300\364\202D\301\255O\242\300V\3245\276\331\356\245@C\024\272@1\270\306\277\266L\022>\242Q\013Ae\t\002@>\020`>\303m\004\301\321\257\273\300\230\306\226?4\200\026AK\037\367@Z\300E\300[\222v\300\222@\033A\020=a\276\022iQ\276\361\236\017\301\346V\303\277\315\226\033\300\370\353\257@\215\371\307@y\251<@V\031\034>\340\304\264@\266\322B\300\\\n\003\301m\030\207\300\247\361\231\300\263n\253=\252\2212@p\262\201@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\271z\330@uv\237?\233\035h@z\250\033\300\212\252\315\300\023\220\217\300\300{\244\300\311a\214?5\203l@E\324\201@3\207\372?k>\327>@\267\273@\226\363\226?\223o\302\300_5\301\300\350\241\335\300\266\2415\276\310\272\231@\350\313\261@1\270\306\277\266L\022>\242Q\013Ae\t\002@>\020`>\303m\004\301\321\257\273\300\230\306\226?4\200\026AK\037\367@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\013\355\214\276B\267\224\277\332\211\310@l\006l\300Y\013\332\300M\200\217\300\361,.\300\233\2305\300\343C\214@\262t\331@\023\t\332\277\237\035Q?\242+\260@W\021R@\370\227r\3007%\371\300\360\301\336\300l\230L\277\205h\247@g\230\350@\361\236;@E\206\237\276\312]\277@\220\211\016\300>)\r\301\327\373\312\300R\330z\300%\t\301>B-1@9\177W@d\216:@%;I\277\3643\312@z$\262\277\236\202\027\301\3163\010\301\253\203@\300FM-?\320\300/@\341\233*@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\271z\330@uv\237?\233\035h@z\250\033\300\212\252\315\300\023\220\217\300\300{\244\300\311a\214?5\203l@E\324\201@\311\307\270@\345\302\301?[\002v@\nH\345?f\005\212\300\005\255\311\300\002,\350\300N\355U?\215\263\266@\276\355\261@\021\t\332\277\237\035Q?\242+\260@Q\021R@\374\227r\3005%\371\300\356\301\336\300\\\230L\277\203h\247@e\230\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\314]P@e\335w?6\373\316@\374:\312\277\362\236\007\276O4\327\300\236\211\202\300\251\357\034@a\303\004A\306%\307@y\251<@V\031\034>\340\304\264@\266\322B\300\\\n\003\301m\030\207\300\247\361\231\300\263n\253=\252\2212@p\262\201@\305\252<@6\037\034>\210\304\264@\200\322B\3005\n\003\301y\030\207\300\265\361\231\300\263y\253=\371\2212@p\262\201@I`\327@{Z\206>^\204\212@\330c3\277i\220\370\300c\270\017\301\374\022P\300n\363\333?\337\217i@C\240&@\260\205G@\267\231\313?M\352R@\320\371\322\276\321g\205\300\253\020\306\300\202\216\243\300\365\236\317>\217\017\205@o\237\271@\215\251\377?\326=\360?;\335b@\345\tx@84\005\300d\255\000\301\310\371\350\300:U;>-\177\303@3\271\350@\262y6\277\003\205\014?29\251@x\354p\277\022\361\274\300I\010\277\300\260\021\233\300\334\301\t\2773\355M@\356~\270@I`\327@{Z\206>^\204\212@\330c3\277i\220\370\300c\270\017\301\374\022P\300n\363\333?\337\217i@C\240&@\271z\330@uv\237?\233\035h@z\250\033\300\212\252\315\300\023\220\217\300\300{\244\300\311a\214?5\203l@E\324\201@\271z\330@uv\237?\233\035h@z\250\033\300\212\252\315\300\023\220\217\300\300{\244\300\311a\214?5\203l@E\324\201@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@-\367\331\277\341\'Q?B)\260@\306\022R@\326\223r\300\205%\371\300S\302\336\300\354\216L\277\225i\247@g\230\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\311\307\270@\345\302\301?[\002v@\nH\345?f\005\212\300\005\255\311\300\002,\350\300N\355U?\215\263\266@\276\355\261@3\207\372?k>\327>@\267\273@\226\363\226?\223o\302\300_5\301\300\350\241\335\300\266\2415\276\310\272\231@\350\313\261@y\251<@V\031\034>\340\304\264@\266\322B\300\\\n\003\301m\030\207\300\247\361\231\300\263n\253=\252\2212@p\262\201@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\271z\330@uv\237?\233\035h@z\250\033\300\212\252\315\300\023\220\217\300\300{\244\300\311a\214?5\203l@E\324\201@\023\t\332\277\237\035Q?\242+\260@W\021R@\370\227r\3007%\371\300\360\301\336\300l\230L\277\205h\247@g\230\350@\007\t\332\277\247\035Q?\240+\260@X\021R@\366\227r\3007%\371\300\361\301\336\300\\\230L\277\205h\247@g\230\350@wH#@\326CL>(\306\216@\234\340\222?\022\370;\300\345\024\322\300\322P\245\300\277x\005\300\234\256\351@\000\330\004AY\206\330\277)\237C?$/\270@\007\317K@\230\206^\300\311_\372\300\310\003\334\300\314\002%\2775\333\261@?\273\351@z\213C\300q\2427\300\312\005\020A\256\306\371\277\\j\221?3]\217\300\367\217Z\300\241_C\300\243e\261@\261}\366@\035H\007@\275\201\364?\373\352^@\2578y@\021\305\001\300\037\316\000\301PK\351\300:\370Z>\232`\304@\271\271\350@\342\330\017\277\312\026\000\276r\330\007A\033C\014\300\210\222\362\277\225\276\316\300\037\377o\300\2701\270?t\216\354@\322\005\307@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@pG\007@\033\202\364?!\353^@\221;y@\237\303\001\300o\316\000\301\nL\351\300Z\365Z>Ja\304@;\272\350@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\333_\302\276\327\201U\277\031\240\177@\275I\204@\312m\200?\3139\302\300~\222\336\300T\344\210\300\2316\211@[\030\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AP\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@pG\007@\033\202\364?!\353^@\221;y@\237\303\001\300o\316\000\301\nL\351\300Z\365Z>Ja\304@;\272\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@Q\204\215@e\010\013\300\036\341\352@\250P\\\300c\t\035?\003\312?\300\032dm\300`|\265\277\254\260\300@\010\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@B`\034?]\014\215\277\301\273q@\201%\266\275\354\036\216\277\211\036\210\3003\344\232\300\312\211\200\300\013\215\021@\242\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@7\255F@u5\322?e\006Q@\\\207\250\276\345\206\204\300\343\177\307\300\306\233\245\300\325%\363>N\357\203@\313\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\312Vl@e\022>\277hK\356@\023r\212\300\270R\205\277A\256\247\300\3169\372\277jc\034>Fj\027Ak\035\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\341\357\020@\341<\236?0\355\325@\2373)@\274\252\375?\226\251\010\301\3539\306\300\2728\014@\227\374$A\037A\367@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\311\307\270@\345\302\301?[\002v@\nH\345?f\005\212\300\005\255\311\300\002,\350\300N\355U?\215\263\266@\276\355\261@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\346L\206\3008\263\366\277R\206\300@\033qa@\033fB\277\325\303\271\300\\\n\324\300KO\251\300g\177X@#\010\014A\346L\206\3008\263\366\277R\206\300@\033qa@\033fB\277\325\303\271\300\\\n\324\300KO\251\300g\177X@#\010\014A\367m\302\276\205\177U\277}\240\177@\251M\204@vu\200?\203;\302\300w\224\336\300\201\344\210\300\2008\211@\013\031\014A\016Vj\276\'\005\301\277\340G\346@c\2238@\347i\240@\311\361\321\300W\202\273\300\302?\023\300.h\007A\200\\\023A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014ApG\007@\033\202\364?!\353^@\221;y@\237\303\001\300o\316\000\301\nL\351\300Z\365Z>Ja\304@;\272\350@1\270\306\277\266L\022>\242Q\013Ae\t\002@>\020`>\303m\004\301\321\257\273\300\230\306\226?4\200\026AK\037\367@\023\t\332\277\237\035Q?\242+\260@W\021R@\370\227r\3007%\371\300\360\301\336\300l\230L\277\205h\247@g\230\350@pG\007@\033\202\364?!\353^@\221;y@\237\303\001\300o\316\000\301\nL\351\300Z\365Z>Ja\304@;\272\350@={\346@\261\014\356\276f_\223@\341\271\245\300\303\304\352\3003\020@\300\025\001A\300^\356\231\277\354\216\233@\t\312\242@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\271z\330@uv\237?\233\035h@z\250\033\300\212\252\315\300\023\220\217\300\300{\244\300\311a\214?5\203l@E\324\201@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\261\3152@\224\373\213\274\204\307\265@\222\337A\300\\\013\000\301\023.\203\300*H\231\300\226mF\276xB+@$\241\204@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\271\241\350>o\337%\300\220\037\305@\362r3\300}\025\245\300\027n\017\300\023:\217\300\203\016\215\300\034\000q?O*\261@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\242F\t\2777\271\024\300\360\021\314@\036\263\265?\264\340B\300\375\323\201\300T\352\322\300Ki\225\300\356#=@\310C\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\341\357\020@\341<\236?0\355\325@\2373)@\274\252\375?\226\251\010\301\3539\306\300\2728\014@\227\374$A\037A\367@X\256b@\225?\214\275\310\323\207@4\334D\300,\241\241\300\363\367\227\300$AC\300^\206\351\277\251<\251@\207\226\331@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\346L\206\3008\263\366\277R\206\300@\033qa@\033fB\277\325\303\271\300\\\n\324\300KO\251\300g\177X@#\010\014A+2\206?\001\0034\300x.\230@l|5\300\346C\001\300\"-1\300\375\321-\300\323\035\312\300\257\'\\@4\207\004A\021\244\207@\220\251\276\277:\244\204@2[\003\300\256\336T\300#4$\300\203\000\234\300\341\324Y\300\316\346\364?\332\342\262@\311\307\270@\345\302\301?[\002v@\nH\345?f\005\212\300\005\255\311\300\002,\350\300N\355U?\215\263\266@\276\355\261@\024~\311\277.`u>\311\366\003A\216\206\r@\371\247\266\276\014M\003\301\255\270\300\300\032\344d?i\351\014Am\t\365@\346L\206\3008\263\366\277R\206\300@\033qa@\033fB\277\325\303\271\300\\\n\324\300KO\251\300g\177X@#\010\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\336gj\2766\373\300\277\022<\346@\233\2348@\037[\240@\371\357\321\300a\206\273\300VN\023\300|`\007A\252[\023A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\023\t\332\277\237\035Q?\242+\260@W\021R@\370\227r\3007%\371\300\360\301\336\300l\230L\277\205h\247@g\230\350@\023\t\332\277\237\035Q?\242+\260@W\021R@\370\227r\3007%\371\300\360\301\336\300l\230L\277\205h\247@g\230\350@\006\331\017\277\252\026\000\276r\330\007A\363B\014\300`\222\362\277\235\276\316\3003\377o\300\2641\270?}\216\354@\331\005\307@\023\t\332\277\237\035Q?\242+\260@W\021R@\370\227r\3007%\371\300\360\301\336\300l\230L\277\205h\247@g\230\350@\341\357\020@\341<\236?0\355\325@\2373)@\274\252\375?\226\251\010\301\3539\306\300\2728\014@\227\374$A\037A\367@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\311\307\270@\345\302\301?[\002v@\nH\345?f\005\212\300\005\255\311\300\002,\350\300N\355U?\215\263\266@\276\355\261@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\271z\330@uv\237?\233\035h@z\250\033\300\212\252\315\300\023\220\217\300\300{\244\300\311a\214?5\203l@E\324\201@\361N\335@ub\022?n\206\332@l\260k\300\026\274\032\300cF\237\300\241i\201\300I\272D@}\331\373@)[\220@\341\357\020@\341<\236?0\355\325@\2373)@\274\252\375?\226\251\010\301\3539\306\300\2728\014@\227\374$A\037A\367@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\341\357\020@\341<\236?0\355\325@\2373)@\274\252\375?\226\251\010\301\3539\306\300\2728\014@\227\374$A\037A\367@\023\t\332\277\237\035Q?\242+\260@W\021R@\370\227r\3007%\371\300\360\301\336\300l\230L\277\205h\247@g\230\350@\341\357\020@\341<\236?0\355\325@\2373)@\274\252\375?\226\251\010\301\3539\306\300\2728\014@\227\374$A\037A\367@\342\330\017\277\312\026\000\276r\330\007A\033C\014\300\210\222\362\277\225\276\316\300\037\377o\300\2701\270?t\216\354@\322\005\307@P\255F@\2535\322?a\006Q@p\207\250\276\363\206\204\300\355\177\307\300\307\233\245\3005\'\363>W\357\203@\303\240\270@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@.@M\300\203|\014\300J\225\271@x\2342\277\244\3117\300Bd\177\3001g\220\300\037\366\240\300\334h\257?\033\000\350@\246z6\277\277\204\014?B9\251@\240\354p\277 \361\274\300G\010\277\300\256\021\233\300\034\302\t\277$\355M@\356~\270@\3533M\300\324\177\014\300\362\223\271@\220m3\277\316\3437\300\312M\177\300\032Z\220\300\201\364\240\300\0027\257?\315\366\347@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@}&\240\277\343\266e\300\021\375\254@\021\250\315@\213\225\213@\357T\204\300e\272\251\300\275j\325\275\245\245\030A\345J\331@}&\240\277\343\266e\300\021\375\254@\021\250\315@\213\225\213@\357T\204\300e\272\251\300\275j\325\275\245\245\030A\345J\331@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014At\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A+m\302\276\003\203U\277?\244\177@\357L\204@\010\177\200?\303;\302\300\322\223\336\300j\343\210\300\352:\211@0\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004AQ\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\345\235F@\274\023\322?\211\tQ@\220{\250\276\224}\204\300\315y\307\300\276\232\245\300\005I\362>\237\351\203@Y\245\270@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@j\272U>b\377M\300<\314\002A\020\202\014>\255O\203@\323i\242\300@\016o\300\3523\223\300\327\016\032Ab\327#A&\315l=\307\334\"\300\330 \237@$\240\261?\373\313\300=\203\263\222\300>\231\232\300\235x\322\300\313\205\256@\360\223\034A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\235\260\226@\232bM\300\026\272\243@\377\t\236\300\212\305\211\300\340\232\202\277\355\221+\300\3257\266\3006\314@@\351A\322@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@j\272U>b\377M\300<\314\002A\020\202\014>\255O\203@\323i\242\300@\016o\300\3523\223\300\327\016\032Ab\327#A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\325\204\233@7\205x\300\333\030\005A\367\r\306\300\265\220\227\276\034t\301\277`\333\312\277G\346m\300\375\375\345@\315\310\340@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@K\204\215@8\010\013\300\260\340\352@TP\\\300\027\005\035?\337\311?\300fdm\300x}\265\277\033\260\300@\371\322\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@V\246[@N\306\363\277\032\323\361@T\262G?\376\204.@\251\376\231\300~^\272\300\244\345\326\277~\217\000A\312\351\357@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@\236\352v\277\213\010\224\300\022\254K@k\306\235@W\211\016\277K-\n\300M\321\210\300g.\214\300\267\000\321@\305\271\353@}&\240\277\343\266e\300\021\375\254@\021\250\315@\213\225\213@\357T\204\300e\272\251\300\275j\325\275\245\245\030A\345J\331@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@%\263\213?*4/\276\004\253\330?\'\374\355@Vl+\300\001\000\264\300\030\204\327\300\301C\032@7\334\346@!L\233@\236\352v\277\213\010\224\300\022\254K@k\306\235@W\211\016\277K-\n\300M\321\210\300g.\214\300\267\000\321@\305\271\353@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@3\204\215@_\007\013\300\256\336\352@\300N\\\300\367\360\034?A\311?\300\306em\300l\202\265\277}\255\300@\260\322\277@\325\204\233@7\205x\300\333\030\005A\367\r\306\300\265\220\227\276\034t\301\277`\333\312\277G\346m\300\375\375\345@\315\310\340@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\302\242[@\\\304\363\277|\323\361@`\357G?\236\214.@\361\001\232\300Pb\272\300\212\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\016Vj\276\'\005\301\277\340G\346@c\2238@\347i\240@\311\361\321\300W\202\273\300\302?\023\300.h\007A\200\\\023AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\232:5>\367,\262\300J[\305@h\036\013\277\300X\253?\036\200U\277\273;\210\277\331\035\t\300T\023\013A1\'\312@\353i\205\276\235\335v\300\327\n\246@\327\002\r@\214\340\017@\211o\024\300\246\023L\300\242\230 >\201\331\360@\2231\251@\242\266-\300\027\302_\300\263`W@`\324c?\254\366,@03\002\300=0\031\300m\321\016\300\267\267\374@t\325\205@\242\266-\300\027\302_\300\263`W@`\324c?\254\366,@03\002\300=0\031\300m\321\016\300\267\267\374@t\325\205@\242\266-\300\027\302_\300\263`W@`\324c?\254\366,@03\002\300=0\031\300m\321\016\300\267\267\374@t\325\205@\363j\205\276\033\335v\300\262\n\246@\250\003\r@\322\340\017@\373o\024\300H\024L\300\242\243 >U\331\360@l1\251@\232:5>\367,\262\300J[\305@h\036\013\277\300X\253?\036\200U\277\273;\210\277\331\035\t\300T\023\013A1\'\312@\363j\205\276\033\335v\300\262\n\246@\250\003\r@\322\340\017@\373o\024\300H\024L\300\242\243 >U\331\360@l1\251@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@L\234\325<\251\233\234\300R\307=@`\0015?\234\354*\300K\233\257\276\032B\n\300\236\323\203\300\304\216\220@M\240\273@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@+2\206?\001\0034\300x.\230@p|5\300\346C\001\300!-1\300\374\321-\300\325\035\312\300\257\'\\@4\207\004A\363j\205\276\033\335v\300\262\n\246@\250\003\r@\322\340\017@\373o\024\300H\024L\300\242\243 >U\331\360@l1\251@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\316\353m@\263:<\300\262\253\252@4\3726\277\0307\014\300\301\2165\300Jy\231\300\357\223\276\300\366\330\240@\202/\001AR`\034?\225\014\215\277\321\273q@\301*\266\275\005\037\216\277\177\036\210\300\"\344\232\300\335\211\200\300\035\215\021@\253\030\350@^\013C?\032R\343\277\236U\337@\350t\253\277\022\2109@I\324\227\300\"\244o\300\313\211\002\300E^\316@\372\236\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\325\204\233@7\205x\300\333\030\005A\367\r\306\300\265\220\227\276\034t\301\277`\333\312\277G\346m\300\375\375\345@\315\310\340@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\212\221\330\277\217\033\265\277\'\373\244@\252\307)\300b\237V@s\266\216\300\036\300<\300\354\262\215\300\312<\332@\217C\323@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\266`\034?|\r\215\277i\276q@\201F\266\275A\030\216\277\277\036\210\300\276\343\232\300\370\210\200\300\203\220\021@\323\030\350@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@V\362O@%\032e\300\217=\026@\366\347\254?\215\177\201\300ev\244\2752\374\207\300\032f\231\277\256\';@\035\274G@T\362O@\033\032e\300]=\026@\035\350\254?\254\177\201\300uu\244\275;\374\207\300Xf\231\277l\';@\026\274G@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\333\255\350?\213\225\221\277I\036\024@FW`\300\310@<\300\227 \016\300\'R\200\300\237\021\271\300V\356\r@-\360\215@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@Q\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\233;\277\2765\254U\277\227\252\177@B0\204@\237\353\177?\t#\302\300\370\223\336\300\341\333\210\300\1772\211@\025\r\014A\016Vj\276\'\005\301\277\340G\346@c\2238@\347i\240@\311\361\321\300W\202\273\300\302?\023\300.h\007A\200\\\023A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\376\001C?\226Q\343\277\200U\337@6r\253\277\210\2119@\331\324\227\300(\244o\3001\212\002\300h^\316@\207\237\366@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\027\260\210@\223\313\277\277}i\204@\266H\014\300\240VY\300c] \300,\304\231\300\227GY\300&c\354?%L\261@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\016Vj\276\'\005\301\277\340G\346@c\2238@\347i\240@\311\361\321\300W\202\273\300\302?\023\300.h\007A\200\\\023A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\356\001C?zQ\343\277`U\337@\006r\253\2776\2119@\325\324\227\300@\244o\300Y\212\002\300>^\316@\202\237\366@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@X\372Q@\'\177\235\277\334[\213@\254\003\002@\322\030\244\277\235K\212\300ft\335\300\'\375i\300j\025w@\230e\341@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@&\315l=\307\334\"\300\330 \237@$\240\261?\373\313\300=\203\263\222\300>\231\232\300\235x\322\300\313\205\256@\360\223\034A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\272\241[@$\304\363\277r\323\361@\272\361G?F\215.@1\002\232\300Qb\272\300\340\347\326\277W\221\000A\277\354\357@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014Ab\372Q@+\177\235\277\333[\213@\200\003\002@\376\030\244\277\223K\212\300Zt\335\300#\375i\300U\025w@\220e\341@t\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@2\304S?7\222^\277\t\003\"@\344\3247?\005\332S\277=-\201\300h\002\304\300gl\301\300\035i\207@\245\t\276@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\016Vj\276\'\005\301\277\340G\346@c\2238@\347i\240@\311\361\321\300W\202\273\300\302?\023\300.h\007A\200\\\023AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\016Vj\276\'\005\301\277\340G\346@c\2238@\347i\240@\311\361\321\300W\202\273\300\302?\023\300.h\007A\200\\\023A\016Vj\276\'\005\301\277\340G\346@c\2238@\347i\240@\311\361\321\300W\202\273\300\302?\023\300.h\007A\200\\\023A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\302\242[@^\304\363\277~\323\361@\\\357G?\242\214.@\361\001\232\300Pb\272\300\210\347\326\277O\221\000A\201\354\357@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AQ\204\215@g\010\013\300\036\341\352@\250P\\\300o\t\035?\001\312?\300\032dm\300f|\265\277\253\260\300@\t\323\277@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\372TL@\021F\234\277\243\024\213@\035B\005@\333\013\235\277\271\244\213\300_{\335\300\255\362j\300>\276w@\257\267\342@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\026\244J@L\350\233\277N\377\212@\316:\006@I\357\232\277\025\014\214\300s}\335\3005<k\300\313\360w@\360\034\343@\230\367Q@\214~\235\277\273[\213@Y\005\002@M\025\244\277IL\212\300rt\335\300\237\375i\300\311\025w@Af\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@|\256\322\276~\272K\300EL\376?\232\013]@Wp\341\277\272\006\352\277B\034\211\300T\376\350\277\345\202V@\210\252\232@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@pG\007@\033\202\364?!\353^@\221;y@\237\303\001\300o\316\000\301\nL\351\300Z\365Z>Ja\304@;\272\350@\016Vj\276\'\005\301\277\340G\346@c\2238@\347i\240@\311\361\321\300W\202\273\300\302?\023\300.h\007A\200\\\023A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\273m\302\276\347\177U\277\203\240\177@\242M\204@\204u\200?u;\302\300v\224\336\300\220\344\210\300w8\211@\013\031\014At\214\020@\341\363S\300\035\"$@E`\262@\"j\367\277\032\273\362\277|\254\313\300z\321\272\277\250\005\236@\203\367\223@}&\240\277\343\266e\300\021\375\254@\021\250\315@\213\225\213@\357T\204\300e\272\251\300\275j\325\275\245\245\030A\345J\331@_w\263\277G\224:\300\341\n\r@\t\254\365@\337\220\264>?=i\300\204\314\314\300\2734\005\300e\263\253@\001\304\312@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014A\223n\302\276\333\177U\277\201\240\177@\252M\204@\246u\200?{;\302\300v\224\336\300\223\344\210\300y8\211@\016\031\014AR\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@R\372Q@#\177\235\277\335[\213@\311\003\002@\264\030\244\277\243K\212\300nt\335\300)\375i\300w\025w@\235e\341@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@6`\034?]\014\215\277\301\273q@A%\266\275\351\036\216\277\213\036\210\3003\344\232\300\312\211\200\300\013\215\021@\243\030\350@\031\260\210@\223\313\277\277}i\204@\266H\014\300\242VY\300c] \300,\304\231\300\227GY\300$c\354?%L\261@"
        }
      }
    }
  }
  node {
    name: "ArgMax/dimension"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "ArgMax"
    op: "ArgMax"
    input: "ArgMax/input"
    input: "ArgMax/dimension"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1760
            }
          }
        }
      }
    }
  }
  node {
    name: "ArgMax_1/input"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1760
            }
            dim {
              size: 10
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1760
            }
            dim {
              size: 10
            }
          }
          tensor_content
        }
      }
    }
  }
  node {
    name: "ArgMax_1/dimension"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
          }
          int_val: 1
        }
      }
    }
  }
  node {
    name: "ArgMax_1"
    op: "ArgMax"
    input: "ArgMax_1/input"
    input: "ArgMax_1/dimension"
    attr {
      key: "T"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1760
            }
          }
        }
      }
    }
  }
  node {
    name: "Equal"
    op: "Equal"
    input: "ArgMax"
    input: "ArgMax_1"
    attr {
      key: "T"
      value {
        type: DT_INT64
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1760
            }
          }
        }
      }
    }
  }
  node {
    name: "Cast"
    op: "Cast"
    input: "Equal"
    attr {
      key: "DstT"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "SrcT"
      value {
        type: DT_BOOL
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1760
            }
          }
        }
      }
    }
  }
  node {
    name: "Const_2"
    op: "Const"
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "dtype"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "value"
      value {
        tensor {
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 1
            }
          }
          int_val: 0
        }
      }
    }
  }
  node {
    name: "Mean"
    op: "Mean"
    input: "Cast"
    input: "Const_2"
    attr {
      key: "T"
      value {
        type: DT_FLOAT
      }
    }
    attr {
      key: "Tidx"
      value {
        type: DT_INT32
      }
    }
    attr {
      key: "_output_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "keep_dims"
      value {
        b: false
      }
    }
  }
  versions {
    producer: 15
  }
}
collection_def {
  key: "summaries"
  value {
    node_list {
      value: "input_reshape/ImageSummary:0"
      value: "layer3/weights/HistogramSummary:0"
      value: "layer3/biases/HistogramSummary:0"
      value: "layer3/HistogramSummary:0"
      value: "layer4/weights/HistogramSummary:0"
      value: "layer4/biases/HistogramSummary:0"
      value: "layer4/HistogramSummary:0"
    }
  }
}
collection_def {
  key: "train_op"
  value {
    node_list {
      value: "MergeSummary/MergeSummary:0"
    }
  }
}
collection_def {
  key: "trainable_variables"
  value {
    bytes_list {
      value: "\n\nVariable:0\022\017Variable/Assign\032\017Variable/read:0"
      value: "\n\014Variable_1:0\022\021Variable_1/Assign\032\021Variable_1/read:0"
      value: "\n\014Variable_2:0\022\021Variable_2/Assign\032\021Variable_2/read:0"
      value: "\n\014Variable_3:0\022\021Variable_3/Assign\032\021Variable_3/read:0"
      value: "\n\022layer3/weights/W:0\022\027layer3/weights/W/Assign\032\027layer3/weights/W/read:0"
      value: "\n\021layer3/biases/b:0\022\026layer3/biases/b/Assign\032\026layer3/biases/b/read:0"
      value: "\n\022layer4/weights/W:0\022\027layer4/weights/W/Assign\032\027layer4/weights/W/read:0"
      value: "\n\021layer4/biases/b:0\022\026layer4/biases/b/Assign\032\026layer4/biases/b/read:0"
    }
  }
}
collection_def {
  key: "variables"
  value {
    bytes_list {
      value: "\n\nVariable:0\022\017Variable/Assign\032\017Variable/read:0"
      value: "\n\014Variable_1:0\022\021Variable_1/Assign\032\021Variable_1/read:0"
      value: "\n\014Variable_2:0\022\021Variable_2/Assign\032\021Variable_2/read:0"
      value: "\n\014Variable_3:0\022\021Variable_3/Assign\032\021Variable_3/read:0"
      value: "\n\022layer3/weights/W:0\022\027layer3/weights/W/Assign\032\027layer3/weights/W/read:0"
      value: "\n\021layer3/biases/b:0\022\026layer3/biases/b/Assign\032\026layer3/biases/b/read:0"
      value: "\n\022layer4/weights/W:0\022\027layer4/weights/W/Assign\032\027layer4/weights/W/read:0"
      value: "\n\021layer4/biases/b:0\022\026layer4/biases/b/Assign\032\026layer4/biases/b/read:0"
      value: "\n\023train/beta1_power:0\022\030train/beta1_power/Assign\032\030train/beta1_power/read:0"
      value: "\n\023train/beta2_power:0\022\030train/beta2_power/Assign\032\030train/beta2_power/read:0"
      value: "\n\025train/Variable/Adam:0\022\032train/Variable/Adam/Assign\032\032train/Variable/Adam/read:0"
      value: "\n\027train/Variable/Adam_1:0\022\034train/Variable/Adam_1/Assign\032\034train/Variable/Adam_1/read:0"
      value: "\n\027train/Variable_1/Adam:0\022\034train/Variable_1/Adam/Assign\032\034train/Variable_1/Adam/read:0"
      value: "\n\031train/Variable_1/Adam_1:0\022\036train/Variable_1/Adam_1/Assign\032\036train/Variable_1/Adam_1/read:0"
      value: "\n\027train/Variable_2/Adam:0\022\034train/Variable_2/Adam/Assign\032\034train/Variable_2/Adam/read:0"
      value: "\n\031train/Variable_2/Adam_1:0\022\036train/Variable_2/Adam_1/Assign\032\036train/Variable_2/Adam_1/read:0"
      value: "\n\027train/Variable_3/Adam:0\022\034train/Variable_3/Adam/Assign\032\034train/Variable_3/Adam/read:0"
      value: "\n\031train/Variable_3/Adam_1:0\022\036train/Variable_3/Adam_1/Assign\032\036train/Variable_3/Adam_1/read:0"
      value: "\n\035train/layer3/weights/W/Adam:0\022\"train/layer3/weights/W/Adam/Assign\032\"train/layer3/weights/W/Adam/read:0"
      value: "\n\037train/layer3/weights/W/Adam_1:0\022$train/layer3/weights/W/Adam_1/Assign\032$train/layer3/weights/W/Adam_1/read:0"
      value: "\n\034train/layer3/biases/b/Adam:0\022!train/layer3/biases/b/Adam/Assign\032!train/layer3/biases/b/Adam/read:0"
      value: "\n\036train/layer3/biases/b/Adam_1:0\022#train/layer3/biases/b/Adam_1/Assign\032#train/layer3/biases/b/Adam_1/read:0"
      value: "\n\035train/layer4/weights/W/Adam:0\022\"train/layer4/weights/W/Adam/Assign\032\"train/layer4/weights/W/Adam/read:0"
      value: "\n\037train/layer4/weights/W/Adam_1:0\022$train/layer4/weights/W/Adam_1/Assign\032$train/layer4/weights/W/Adam_1/read:0"
      value: "\n\034train/layer4/biases/b/Adam:0\022!train/layer4/biases/b/Adam/Assign\032!train/layer4/biases/b/Adam/read:0"
      value: "\n\036train/layer4/biases/b/Adam_1:0\022#train/layer4/biases/b/Adam_1/Assign\032#train/layer4/biases/b/Adam_1/read:0"
    }
  }
}
