from flask import Flask, request, jsonify
import random
import numpy as np
app = Flask(__name__)
import classifySound
global classifiedArray
global isUpdated
global direction

a = np.random.rand(1,40960)[0]
modle = classifySound.ClassifiedSound(a)

def formatOutput(array):
	output = "["

	for i, val in enumerate(array):
		output = output + str(val)
		if(i != len(array)-1):
			output = output + ","
	output = output + "]"
	return output


@app.route('/device/get-direction', methods=['GET'])
def getDirection():

	classes = [-1] * 6
	if len(classifiedArray)>1 and isUpdated == 1:
		classes[direction-1] = classifiedArray[0]
		global isUpdated
		isUpdated = 0
	return formatOutput(classes)

@app.route('/device/get-sound-frame',  methods = ['POST'])
def getSoundFrame():
	global direction
	direction = request.json['direction']
	dataset = request.json['window']
	global classifiedArray
	modle.calculateClass(dataset)
	classifiedArray = [5,6,7]
	print classifiedArray
	global isUpdated
	isUpdated = 1
	return "ok"

@app.route('/test')
def test():
    return '[-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,-1,-1,-1,3,4,5,]'

import numpy as np
import  classifySound


# for i in range(0,3):
#
# 	a = np.random.rand(1,40960)[0]
# 	classifiedArray = classifySound.ClassifiedSound(a)
# 	del classifiedArray




